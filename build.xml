<project name="SpecEdit" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/SpecEdit" />
  <property name="build.layout" location="${build.dir}/artifacts/SpecEdit" />
  <tstamp>
    <format property="date" pattern="yyyyMMdd" />
  </tstamp>
  <property name="build.number" value="192.SNAPSHOT" />
  <property name="mps_home" location="" />
  <property name="artifacts.mpsStandalone" location="${mps_home}" />
  <property name="artifacts.mpsMakePlugin" location="${mps_home}/plugins" />
  <property name="artifacts.mpsVcs" location="${mps_home}/plugins" />
  <property file="${artifacts.mpsStandalone}/build.properties" prefix="import.mpsStandalone" />
  <property name="mpsBootstrapCore.version" value="${import.mpsStandalone.mpsBootstrapCore.version}" />
  <property name="environment" value="env" />
  <property name="env.JAVA_HOME" value="${java.home}/.." />
  <property name="jdk.home" value="${env.JAVA_HOME}" />
  <property name="mps.generator.skipUnmodifiedModels" value="false" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${artifacts.mpsStandalone}/lib/ant/lib/ant-mps.jar" />
    <pathelement location="${artifacts.mpsStandalone}/lib/jdom.jar" />
    <pathelement location="${artifacts.mpsStandalone}/lib/log4j.jar" />
  </path>
  
  <target name="assemble" depends="classes, declare-mps-tasks, collect-tips-mps-tips, fetchDependencies">
    <mkdir dir="${build.layout}/languages" />
    <copy todir="${build.layout}/languages">
      <fileset dir="${artifacts.mpsStandalone}/languages" />
    </copy>
    <mkdir dir="${build.layout}/license" />
    <copy todir="${build.layout}/license">
      <fileset dir="${artifacts.mpsStandalone}/license" />
    </copy>
    <mkdir dir="${build.layout}/bin" />
    <copy todir="${build.layout}/bin">
      <fileset dir="${artifacts.mpsStandalone}/bin">
        <include name="log.xml" />
        <include name="log4j.dtd" />
      </fileset>
    </copy>
    <copy todir="${build.layout}/bin">
      <fileset file="${mps_home}/bin/idea.properties" />
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="\.MPS(\w+)" replace="\.${build.number}" flags="g" />
        </tokenfilter>
      </filterchain>
    </copy>
    <mkdir dir="${build.layout}/lib" />
    <copy todir="${build.layout}/lib">
      <fileset dir="${artifacts.mpsStandalone}/lib">
        <exclude name="MPS-src.zip" />
        <exclude name="branding.jar" />
        <exclude name="mps-tips.jar" />
      </fileset>
    </copy>
    <jar destfile="${build.layout}/lib/mps-tips.jar" duplicate="preserve">
      <fileset file="${build.tmp}/out/mps-tips/mps-tips/**" />
    </jar>
    <mkdir dir="${build.tmp}/default/branding.jar" />
    <mkdir dir="${build.tmp}/default/branding.jar/idea" />
    <echoxml file="${build.tmp}/default/branding.jar/idea/IdeaApplicationInfo.xml">
      <component>
        <version major="1" minor="0" eap="false" />
        <build number="${build.number}" date="${date}" />
        <logo url="/splash.png" textcolor="FFFFFF" progressColor="FFFFFF" />
        <about url="/about.png" foreground="FFFFFF" copyrightForeground="FFFFFF" />
        <icon size32="/MPS32.png" size16="/MPS16.png" />
        <package code="code" />
        <names product="SpecEdit" fullname="SpecEdit" script="specedit" />
        
        <welcome-screen logo-url="/logo.png" />
        
        
        
        
      </component>
    </echoxml>
    <jar destfile="${build.layout}/lib/branding.jar" duplicate="preserve">
      <fileset file="${basedir}/icons/MPS16.png" />
      <fileset file="${basedir}/icons/MPS32.png" />
      <fileset file="${basedir}/icons/logo.png" />
      <fileset file="${basedir}/icons/splash.png" />
      <fileset file="${basedir}/icons/about.png" />
      <fileset dir="${build.tmp}/default/branding.jar" />
    </jar>
    <mkdir dir="${build.layout}/plugins" />
    <mkdir dir="${build.layout}/plugins/svn4idea" />
    <copy todir="${build.layout}/plugins/svn4idea">
      <fileset dir="${artifacts.mpsVcs}/svn4idea" />
    </copy>
    <mkdir dir="${build.layout}/plugins/git4idea" />
    <copy todir="${build.layout}/plugins/git4idea">
      <fileset dir="${artifacts.mpsVcs}/git4idea" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-core" />
    <copy todir="${build.layout}/plugins/mps-core">
      <fileset dir="${artifacts.mpsStandalone}/plugins/mps-core" />
    </copy>
    <mkdir dir="${build.layout}/plugins/mps-make" />
    <copy todir="${build.layout}/plugins/mps-make">
      <fileset dir="${artifacts.mpsMakePlugin}/mps-make" />
    </copy>
    <mkdir dir="${build.layout}/plugins/SpecEdit" />
    <mkdir dir="${build.layout}/plugins/SpecEdit/META-INF" />
    <echoxml file="${build.layout}/plugins/SpecEdit/META-INF/plugin.xml">
      <idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
        <id>SpecEdit</id>
        <name>SpecEdit</name>
        <version>1.0</version>
        <depends>jetbrains.mps.core</depends>
        
        <extensions defaultExtensionNs="com.intellij">
          <mps.LanguageLibrary dir="/languages" />
        </extensions>
      </idea-plugin>
    </echoxml>
    <mkdir dir="${build.layout}/plugins/SpecEdit/languages" />
    <mkdir dir="${build.layout}/plugins/SpecEdit/languages/SpecEdit" />
    <mkdir dir="${build.tmp}/default/TLA.jar" />
    <mkdir dir="${build.tmp}/default/TLA.jar/META-INF" />
    <echoxml file="${build.tmp}/default/TLA.jar/META-INF/module.xml">
      <module namespace="TLA" type="language" uuid="7a6b8f83-d202-4e59-94ec-f562edfca98d">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" kind="rt" />
          <module ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)" kind="rt" />
          <module ref="1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)" kind="rt" />
          <module ref="8865b7a8-5271-43d3-884c-6fd1d9cfdd34(MPS.OpenAPI)" kind="rt" />
          <module ref="4c6a28d1-2c60-478d-b36e-db9b3cbb21fb(closures.runtime)" kind="rt" />
          <module ref="9b80526e-f0bf-4992-bdf5-cee39c1833f3(collections.runtime)" kind="rt" />
          <module ref="a3e4657f-a76c-45bb-bbda-c764596ecc65(jetbrains.mps.baseLanguage.logging.runtime)" kind="rt" />
          <module ref="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" kind="rt" />
          <module ref="d44dab97-aaac-44cb-9745-8a14db674c03(jetbrains.mps.baseLanguage.tuples.runtime)" kind="rt" />
          <module ref="34e84b8f-afa8-4364-abcd-a279fddddbe7(jetbrains.mps.editor.runtime)" kind="rt" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac5(jetbrains.mps.lang.behavior.api)" kind="rt" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac4(jetbrains.mps.lang.behavior.runtime)" kind="rt" />
          <module ref="8e98f4e2-decf-4e97-bf80-9109e8b759ee(jetbrains.mps.lang.constraints.rules.runtime)" kind="rt" />
          <module ref="0a98f3e2-decf-4e97-bf80-9109eccc59bb(jetbrains.mps.lang.feedback.problem.rules)" kind="rt" />
          <module ref="9abaaae2-decf-4e97-bf80-9109e8b759cc(jetbrains.mps.lang.messages.api)" kind="rt" />
          <module ref="9a4afe51-f114-4595-b5df-048ce3c596be(jetbrains.mps.runtime)" kind="rt" />
          <module ref="1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)" kind="cl" />
          <module ref="2d3c70e9-aab2-4870-8d8d-6036800e4103(jetbrains.mps.kernel)" kind="cl" />
          <module ref="a9e4c532-c5f5-4bb7-99ef-42abb73bbb70(jetbrains.mps.lang.descriptor.aspects)" kind="cl" />
        </dependencies>
        <uses>
          <language id="l:f3061a53-9226-4cc5-a443-f952ceaf5816:jetbrains.mps.baseLanguage" />
          <language id="l:fd392034-7849-419d-9071-12563d152375:jetbrains.mps.baseLanguage.closures" />
          <language id="l:83888646-71ce-4f1c-9c53-c54016f6ad4f:jetbrains.mps.baseLanguage.collections" />
          <language id="l:f2801650-65d5-424e-bb1b-463a8781b786:jetbrains.mps.baseLanguage.javadoc" />
          <language id="l:760a0a8c-eabb-4521-8bfd-65db761a9ba3:jetbrains.mps.baseLanguage.logging" />
          <language id="l:a247e09e-2435-45ba-b8d2-07e93feba96a:jetbrains.mps.baseLanguage.tuples" />
          <language id="l:aee9cad2-acd4-4608-aef2-0004f6a1cdbd:jetbrains.mps.lang.actions" />
          <language id="l:af65afd8-f0dd-4942-87d9-63a55f2a9db1:jetbrains.mps.lang.behavior" />
          <language id="l:3f4bc5f5-c6c1-4a28-8b10-c83066ffa4a1:jetbrains.mps.lang.constraints" />
          <language id="l:e51810c5-7308-4642-bcb6-469e61b5dd18:jetbrains.mps.lang.constraints.msg.specification" />
          <language id="l:5dae8159-ab99-46bb-a40d-0cee30ee7018:jetbrains.mps.lang.constraints.rules.kinds" />
          <language id="l:134c38d4-e3af-4d9e-b069-1c7df0a4005d:jetbrains.mps.lang.constraints.rules.skeleton" />
          <language id="l:3ad5badc-1d9c-461c-b7b1-fa2fcd0a0ae7:jetbrains.mps.lang.context" />
          <language id="l:ea3159bf-f48e-4720-bde2-86dba75f0d34:jetbrains.mps.lang.context.defs" />
          <language id="l:f4ad079d-bc71-4ffb-9600-9328705cf998:jetbrains.mps.lang.descriptor" />
          <language id="l:18bc6592-03a6-4e29-a83a-7ff23bde13ba:jetbrains.mps.lang.editor" />
          <language id="l:d7a92d38-f7db-40d0-8431-763b0c3c9f20:jetbrains.mps.lang.intentions" />
          <language id="l:ad93155d-79b2-4759-b10c-55123e763903:jetbrains.mps.lang.messages" />
          <language id="l:d4615e3b-d671-4ba9-af01-2b78369b0ba7:jetbrains.mps.lang.pattern" />
          <language id="l:3a13115c-633c-4c5c-bbcc-75c4219e9555:jetbrains.mps.lang.quotation" />
          <language id="l:982eb8df-2c96-4bd7-9963-11712ea622e5:jetbrains.mps.lang.resources" />
          <language id="l:b3551702-269c-4f05-ba61-58060cef4292:jetbrains.mps.lang.rulesAndMessages" />
          <language id="l:13744753-c81f-424a-9c1b-cf8943bf4e86:jetbrains.mps.lang.sharedConcepts" />
          <language id="l:7866978e-a0f0-4cc7-81bc-4d213d9375e1:jetbrains.mps.lang.smodel" />
          <language id="l:c72da2b9-7cce-4447-8389-f407dc1158b7:jetbrains.mps.lang.structure" />
          <language id="l:c7fb639f-be78-4307-89b0-b5959c3fa8c8:jetbrains.mps.lang.text" />
          <language id="l:b83431fe-5c8f-40bc-8a36-65e25f4dd253:jetbrains.mps.lang.textGen" />
          <language id="l:7a5dda62-9140-4668-ab76-d5ed1746f2b2:jetbrains.mps.lang.typesystem" />
        </uses>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="TLA-src.jar" descriptor="TLA.mpl" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/plugins/SpecEdit/languages/SpecEdit/TLA.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/TLA" />
      <fileset dir="${basedir}/languages/TLA/source_gen" includes="**/trace.info, **/exports, **/*.mps, **/checkpoints" />
      <fileset dir="${build.tmp}/default/TLA.jar" />
    </jar>
    <mkdir dir="${build.tmp}/default/TLA-generator.jar" />
    <mkdir dir="${build.tmp}/default/TLA-generator.jar/META-INF" />
    <echoxml file="${build.tmp}/default/TLA-generator.jar/META-INF/module.xml">
      <module namespace="TLA#01" type="generator" uuid="9582733f-c091-4138-a2e5-faa16653c44a">
        <dependencies>
          <module ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065(JDK)" kind="rt" />
          <module ref="6ed54515-acc8-4d1e-a16c-9fd6cfe951ea(MPS.Core)" kind="rt" />
          <module ref="8865b7a8-5271-43d3-884c-6fd1d9cfdd34(MPS.OpenAPI)" kind="rt" />
          <module ref="4c6a28d1-2c60-478d-b36e-db9b3cbb21fb(closures.runtime)" kind="rt" />
          <module ref="9b80526e-f0bf-4992-bdf5-cee39c1833f3(collections.runtime)" kind="rt" />
          <module ref="a3e4657f-a76c-45bb-bbda-c764596ecc65(jetbrains.mps.baseLanguage.logging.runtime)" kind="rt" />
          <module ref="52b81ac7-93fd-4e9e-b972-4995882da6d4(jetbrains.mps.baseLanguage.references.runtime)" kind="rt" />
          <module ref="d44dab97-aaac-44cb-9745-8a14db674c03(jetbrains.mps.baseLanguage.tuples.runtime)" kind="rt" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac5(jetbrains.mps.lang.behavior.api)" kind="rt" />
          <module ref="d936855b-48da-4812-a8a0-2bfddd633ac4(jetbrains.mps.lang.behavior.runtime)" kind="rt" />
          <module ref="9a4afe51-f114-4595-b5df-048ce3c596be(jetbrains.mps.runtime)" kind="rt" />
          <module ref="7a6b8f83-d202-4e59-94ec-f562edfca98d(TLA)" kind="cl" />
        </dependencies>
        <uses>
          <language id="l:f3061a53-9226-4cc5-a443-f952ceaf5816:jetbrains.mps.baseLanguage" />
          <language id="l:fd392034-7849-419d-9071-12563d152375:jetbrains.mps.baseLanguage.closures" />
          <language id="l:83888646-71ce-4f1c-9c53-c54016f6ad4f:jetbrains.mps.baseLanguage.collections" />
          <language id="l:f2801650-65d5-424e-bb1b-463a8781b786:jetbrains.mps.baseLanguage.javadoc" />
          <language id="l:760a0a8c-eabb-4521-8bfd-65db761a9ba3:jetbrains.mps.baseLanguage.logging" />
          <language id="l:a247e09e-2435-45ba-b8d2-07e93feba96a:jetbrains.mps.baseLanguage.tuples" />
          <language id="l:b401a680-8325-4110-8fd3-84331ff25bef:jetbrains.mps.lang.generator" />
          <language id="l:d7706f63-9be2-479c-a3da-ae92af1e64d5:jetbrains.mps.lang.generator.generationContext" />
          <language id="l:289fcc83-6543-41e8-a5ca-768235715ce4:jetbrains.mps.lang.generator.generationParameters" />
          <language id="l:3a13115c-633c-4c5c-bbcc-75c4219e9555:jetbrains.mps.lang.quotation" />
          <language id="l:13744753-c81f-424a-9c1b-cf8943bf4e86:jetbrains.mps.lang.sharedConcepts" />
          <language id="l:7866978e-a0f0-4cc7-81bc-4d213d9375e1:jetbrains.mps.lang.smodel" />
          <language id="l:c7fb639f-be78-4307-89b0-b5959c3fa8c8:jetbrains.mps.lang.text" />
        </uses>
        <classpath>
          <entry path="." />
        </classpath>
        <sources jar="TLA-src.jar" descriptor="TLA.mpl" />
      </module>
    </echoxml>
    <jar destfile="${build.layout}/plugins/SpecEdit/languages/SpecEdit/TLA-generator.jar" duplicate="preserve">
      <fileset dir="${build.tmp}/java/out/TLA#01" />
      <fileset dir="${build.tmp}/default/TLA-generator.jar" />
    </jar>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/languages-TLA-generator-template">
      <fileset dir="${basedir}/languages/TLA/generator/template" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <copyModels todir="${build.tmp}/customProcessors/copyModels/languages-TLA-models">
      <fileset dir="${basedir}/languages/TLA/models" includes="**/*.mps, **/*.metadata, **/*.history, **/*.mpsr, **/.model" />
    </copyModels>
    <jar destfile="${build.layout}/plugins/SpecEdit/languages/SpecEdit/TLA-src.jar" duplicate="preserve">
      <fileset dir="${basedir}/languages/TLA/generator/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <fileset dir="${basedir}/languages/TLA/source_gen">
        <exclude name="**/trace.info" />
        <exclude name="**/exports" />
        <exclude name="**/checkpoints" />
        <exclude name="**/*.mps" />
      </fileset>
      <zipfileset file="${basedir}/languages/TLA/TLA.mpl" prefix="module" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/languages-TLA-generator-template" prefix="module/generator/template" />
      <zipfileset dir="${build.tmp}/customProcessors/copyModels/languages-TLA-models" prefix="module/models" />
    </jar>
    <echo file="${build.layout}/build.number">build.number=${build.number}${line.separator}date=${date}${line.separator}version=1.0</echo>
    <echo file="${build.layout}/build.properties">SpecEdit.date=${date}${line.separator}SpecEdit.build.number=${build.number}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}</echo>
  </target>
  
  <target name="buildDependents" />
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="compileJava" depends="java.compile.TLA, java.compile.TLA#01" />
  
  <target name="processResources" />
  
  <target name="classes" depends="compileJava, processResources" />
  
  <target name="test" depends="classes" />
  
  <target name="check" depends="test" />
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate strictMode="true" parallelMode="true" parallelThreads="8" useInplaceTransform="false" hideWarnings="false" createStaticRefs="true" fork="true" skipUnmodifiedModels="${mps.generator.skipUnmodifiedModels}">
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/closures.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/collections.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.extensionMethods.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.references.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <library file="${artifacts.mpsStandalone}/languages/devkits/jetbrains.mps.devkit.aspect.constraints.jar" />
      <library file="${artifacts.mpsStandalone}/languages/devkits/jetbrains.mps.devkit.aspect.structure.jar" />
      <library file="${artifacts.mpsStandalone}/languages/devkits/jetbrains.mps.devkit.aspect.textgen.jar" />
      <library file="${artifacts.mpsStandalone}/languages/devkits/jetbrains.mps.devkit.aspect.typesystem.jar" />
      <library file="${artifacts.mpsStandalone}/languages/devkits/jetbrains.mps.devkit.general-purpose.jar" />
      <library file="${artifacts.mpsStandalone}/languages/devkits/jetbrains.mps.devkit.language-descriptor.jar" />
      <library file="${artifacts.mpsStandalone}/languages/devkits/jetbrains.mps.devkit.templates.jar" />
      <library file="${artifacts.mpsStandalone}/languages/editor/jetbrains.mps.editor.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/editor/jetbrains.mps.editorlang.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.baseLanguage.lightweightdsl.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.constraints.msg.specification.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.kinds.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.skeleton.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.context.defs.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.context.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.descriptor.aspects.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.descriptor.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.feedback.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.feedback.messages.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.feedback.problem.childAndProp.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.feedback.problem.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.feedback.problem.scopes.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.feedback.skeleton.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.generator.generationParameters.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.messages.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.migration.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.modelapi.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.rulesAndMessages.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.smodel.query.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.refactoring.participant.jar" />
      <library file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.typesystemEngine.jar" />
      <library file="${artifacts.mpsStandalone}/languages/make/jetbrains.mps.make.facets.jar" />
      <library file="${artifacts.mpsStandalone}/languages/make/jetbrains.mps.make.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/make/jetbrains.mps.smodel.resources.jar" />
      <library file="${artifacts.mpsStandalone}/languages/mps-stubs.jar" />
      <library file="${artifacts.mpsStandalone}/languages/plaf/jetbrains.mps.baseLanguage.search.jar" />
      <library file="${artifacts.mpsStandalone}/languages/plaf/jetbrains.mps.baseLanguage.util.jar" />
      <library file="${artifacts.mpsStandalone}/languages/plaf/jetbrains.mps.ide.platform.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.analyzers.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.dataFlow.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.findUsages.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.behavior.api.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.behavior.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.constraints.rules.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.feedback.api.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.feedback.context.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.feedback.problem.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.feedback.problem.rules.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.messages.api.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.migration.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.lang.smodel.query.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/runtimes/jetbrains.mps.refactoring.runtime.jar" />
      <library file="${artifacts.mpsStandalone}/languages/text/jetbrains.mps.lang.text.jar" />
      <library file="${artifacts.mpsStandalone}/languages/util/jetbrains.mps.kernel.jar" />
      <library file="${artifacts.mpsStandalone}/languages/util/jetbrains.mps.project.jar" />
      <library file="${artifacts.mpsStandalone}/languages/util/jetbrains.mps.refactoring.jar" />
      <library file="${artifacts.mpsStandalone}/languages/util/jetbrains.mps.runtime.jar" />
      <chunk>
        <module file="${basedir}/languages/TLA/TLA.mpl" />
      </chunk>
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xmx512m" />
      </jvmargs>
      <macro name="mps_home" path="${mps_home}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks">
    <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  </target>
  
  <target name="makeDependents" />
  
  <target name="java.compile.TLA" depends="fetchDependencies">
    <mkdir dir="${basedir}/languages/TLA/source_gen" />
    <mkdir dir="${build.tmp}/java/out/TLA" />
    <javac destdir="${build.tmp}/java/out/TLA" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/languages/TLA/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mpsStandalone}/lib/mps-core.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-logging.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-references.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-messaging.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-boot-util.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-context.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-constraints-runtime.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-problem.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-feedback-api.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-generator.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-persistence.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-environment.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-project-check.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-textgen.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-messages-for-rules.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-messages-api.jar" />
        <fileset dir="${artifacts.mpsStandalone}/lib" includes="*.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/annotations.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/log4j.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/jdom.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/trove4j.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/ecj-4.10.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.descriptor.aspects.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.TLA#01" depends="java.compile.TLA, fetchDependencies">
    <mkdir dir="${basedir}/languages/TLA/generator/source_gen" />
    <mkdir dir="${build.tmp}/java/out/TLA#01" />
    <javac destdir="${build.tmp}/java/out/TLA#01" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/languages/TLA/generator/source_gen" />
      </src>
      <classpath>
        <fileset file="${artifacts.mpsStandalone}/lib/mps-core.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-platform.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-annotations.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-openapi.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-logging.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-closures.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-collections.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-tuples.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-references.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-behavior-api.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-behavior-runtime.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-messaging.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-boot-util.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-context.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-constraints-runtime.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-problem.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-feedback-api.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-editor.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-editor-api.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-editor-runtime.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-generator.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-persistence.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-environment.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-project-check.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/mps-textgen.jar" />
        <pathelement path="${build.tmp}/java/out/TLA" />
        <fileset dir="${artifacts.mpsStandalone}/lib" includes="*.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/annotations.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/log4j.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/jdom.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/trove4j.jar" />
        <fileset file="${artifacts.mpsStandalone}/lib/ecj-4.10.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.logging.runtime.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
        <fileset file="${artifacts.mpsStandalone}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      </classpath>
    </javac>
  </target>
  
  <target name="cleanSources">
    <delete dir="${basedir}/languages/TLA/source_gen" />
    <delete dir="${basedir}/languages/TLA/generator/source_gen" />
  </target>
  
  <target name="collect-tips-mps-tips">
    <mkdir dir="${build.tmp}/out/mps-tips/mps-tips/tips/css" />
    <mkdir dir="${build.tmp}/out/mps-tips/mps-tips/tips/images" />
    <unjar src="${mps_home}/lib/mps-tips.jar" dest="${build.tmp}/out/mps-tips/mps-tips">
      <patternset>
        <include name="tips/**" />
      </patternset>
    </unjar>
    <mkdir dir="${build.tmp}/out/mps-tips/mps-tips/META-INF" />
    <fileset id="contents" includes="*.*" dir="${build.tmp}/out/mps-tips/mps-tips/tips" />
    <property name="mps-tips.prop.contents" refid="contents" />
    <echoxml file="${build.tmp}/out/mps-tips/mps-tips/META-INF/IdeTipsAndTricks.xml">
      <idea-plugin>
        <extensions defaultExtensionNs="com.intellij">
          <tipAndTrick file="${mps-tips.prop.contents}" />
        </extensions>
      </idea-plugin>
    </echoxml>
    <replace file="${build.tmp}/out/mps-tips/mps-tips/META-INF/IdeTipsAndTricks.xml" token=";" value="&quot;/&gt;&#xD;&#x0009;&lt;tipAndTrick file=&quot;" />
    <replace file="${build.tmp}/out/mps-tips/mps-tips/META-INF/IdeTipsAndTricks.xml" token="&lt;tipAndTrick file=&quot;&quot; /&gt;" value="" />
  </target>
</project>