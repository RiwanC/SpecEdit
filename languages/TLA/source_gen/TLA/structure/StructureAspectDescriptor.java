package TLA.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptABS_LHS = createDescriptorForABS_LHS();
  /*package*/ final ConceptDescriptor myConceptAntiSlashSlashExpr = createDescriptorForAntiSlashSlashExpr();
  /*package*/ final ConceptDescriptor myConceptAntiSlashSlashExprList = createDescriptorForAntiSlashSlashExprList();
  /*package*/ final ConceptDescriptor myConceptArgument = createDescriptorForArgument();
  /*package*/ final ConceptDescriptor myConceptAssumption = createDescriptorForAssumption();
  /*package*/ final ConceptDescriptor myConceptAxiomNode = createDescriptorForAxiomNode();
  /*package*/ final ConceptDescriptor myConceptCase = createDescriptorForCase();
  /*package*/ final ConceptDescriptor myConceptCaseArm = createDescriptorForCaseArm();
  /*package*/ final ConceptDescriptor myConceptCharacterAt = createDescriptorForCharacterAt();
  /*package*/ final ConceptDescriptor myConceptChooseAndExpressions = createDescriptorForChooseAndExpressions();
  /*package*/ final ConceptDescriptor myConceptComment = createDescriptorForComment();
  /*package*/ final ConceptDescriptor myConceptConstantDeclaration = createDescriptorForConstantDeclaration();
  /*package*/ final ConceptDescriptor myConceptDefinition = createDescriptorForDefinition();
  /*package*/ final ConceptDescriptor myConceptExcept = createDescriptorForExcept();
  /*package*/ final ConceptDescriptor myConceptExceptInterface = createDescriptorForExceptInterface();
  /*package*/ final ConceptDescriptor myConceptExceptList = createDescriptorForExceptList();
  /*package*/ final ConceptDescriptor myConceptExprAndGeneralInfixOpAndExpr = createDescriptorForExprAndGeneralInfixOpAndExpr();
  /*package*/ final ConceptDescriptor myConceptExprAndGeneralPostfixOp = createDescriptorForExprAndGeneralPostfixOp();
  /*package*/ final ConceptDescriptor myConceptExprAndXAndExpr = createDescriptorForExprAndXAndExpr();
  /*package*/ final ConceptDescriptor myConceptExprTupleAndExpr = createDescriptorForExprTupleAndExpr();
  /*package*/ final ConceptDescriptor myConceptExpression = createDescriptorForExpression();
  /*package*/ final ConceptDescriptor myConceptExpressionBetweenParentheses = createDescriptorForExpressionBetweenParentheses();
  /*package*/ final ConceptDescriptor myConceptExpressionTuple = createDescriptorForExpressionTuple();
  /*package*/ final ConceptDescriptor myConceptExtendedModuleName = createDescriptorForExtendedModuleName();
  /*package*/ final ConceptDescriptor myConceptFunctionAndRange = createDescriptorForFunctionAndRange();
  /*package*/ final ConceptDescriptor myConceptFunctionDefinition = createDescriptorForFunctionDefinition();
  /*package*/ final ConceptDescriptor myConceptGeneralIdentifier = createDescriptorForGeneralIdentifier();
  /*package*/ final ConceptDescriptor myConceptGeneralIdentifierAndArg = createDescriptorForGeneralIdentifierAndArg();
  /*package*/ final ConceptDescriptor myConceptGeneralInfixOp = createDescriptorForGeneralInfixOp();
  /*package*/ final ConceptDescriptor myConceptGeneralPostfixOp = createDescriptorForGeneralPostfixOp();
  /*package*/ final ConceptDescriptor myConceptGeneralPrefixOp = createDescriptorForGeneralPrefixOp();
  /*package*/ final ConceptDescriptor myConceptGeneralPrefixOpAndExpression = createDescriptorForGeneralPrefixOpAndExpression();
  /*package*/ final ConceptDescriptor myConceptIDAndInfixOpAndID = createDescriptorForIDAndInfixOpAndID();
  /*package*/ final ConceptDescriptor myConceptIDAndPostfixOp = createDescriptorForIDAndPostfixOp();
  /*package*/ final ConceptDescriptor myConceptIDOrTupleOrIDList = createDescriptorForIDOrTupleOrIDList();
  /*package*/ final ConceptDescriptor myConceptIdentifierList = createDescriptorForIdentifierList();
  /*package*/ final ConceptDescriptor myConceptIdentifierNode = createDescriptorForIdentifierNode();
  /*package*/ final ConceptDescriptor myConceptIdentifierNodeForChoose = createDescriptorForIdentifierNodeForChoose();
  /*package*/ final ConceptDescriptor myConceptIdentifierOrTuple = createDescriptorForIdentifierOrTuple();
  /*package*/ final ConceptDescriptor myConceptIdentifierOrTupleForChoose = createDescriptorForIdentifierOrTupleForChoose();
  /*package*/ final ConceptDescriptor myConceptIf = createDescriptorForIf();
  /*package*/ final ConceptDescriptor myConceptInfixOpNode = createDescriptorForInfixOpNode();
  /*package*/ final ConceptDescriptor myConceptInstance = createDescriptorForInstance();
  /*package*/ final ConceptDescriptor myConceptInstancePrefix = createDescriptorForInstancePrefix();
  /*package*/ final ConceptDescriptor myConceptLet = createDescriptorForLet();
  /*package*/ final ConceptDescriptor myConceptLocalFunctionDefinition = createDescriptorForLocalFunctionDefinition();
  /*package*/ final ConceptDescriptor myConceptLocalInstance = createDescriptorForLocalInstance();
  /*package*/ final ConceptDescriptor myConceptLocalModuleDefinition = createDescriptorForLocalModuleDefinition();
  /*package*/ final ConceptDescriptor myConceptLocalOperatorDefinition = createDescriptorForLocalOperatorDefinition();
  /*package*/ final ConceptDescriptor myConceptModule = createDescriptorForModule();
  /*package*/ final ConceptDescriptor myConceptModuleDefinition = createDescriptorForModuleDefinition();
  /*package*/ final ConceptDescriptor myConceptModuleNameList = createDescriptorForModuleNameList();
  /*package*/ final ConceptDescriptor myConceptNameArrowExpr = createDescriptorForNameArrowExpr();
  /*package*/ final ConceptDescriptor myConceptNameColonExpr = createDescriptorForNameColonExpr();
  /*package*/ final ConceptDescriptor myConceptNonFixLHS = createDescriptorForNonFixLHS();
  /*package*/ final ConceptDescriptor myConceptNumberNode = createDescriptorForNumberNode();
  /*package*/ final ConceptDescriptor myConceptOpDecl = createDescriptorForOpDecl();
  /*package*/ final ConceptDescriptor myConceptOpDeclList = createDescriptorForOpDeclList();
  /*package*/ final ConceptDescriptor myConceptOpIdentifierNode = createDescriptorForOpIdentifierNode();
  /*package*/ final ConceptDescriptor myConceptOperatorDefinition = createDescriptorForOperatorDefinition();
  /*package*/ final ConceptDescriptor myConceptOther = createDescriptorForOther();
  /*package*/ final ConceptDescriptor myConceptPointAndName = createDescriptorForPointAndName();
  /*package*/ final ConceptDescriptor myConceptPostfixOpNode = createDescriptorForPostfixOpNode();
  /*package*/ final ConceptDescriptor myConceptPostfixOpUnderscoreNode = createDescriptorForPostfixOpUnderscoreNode();
  /*package*/ final ConceptDescriptor myConceptPrefixOpAndID = createDescriptorForPrefixOpAndID();
  /*package*/ final ConceptDescriptor myConceptPrefixOpNode = createDescriptorForPrefixOpNode();
  /*package*/ final ConceptDescriptor myConceptPrefixOpUnderscoreNode = createDescriptorForPrefixOpUnderscoreNode();
  /*package*/ final ConceptDescriptor myConceptQuantifierAndIDListAndExpr = createDescriptorForQuantifierAndIDListAndExpr();
  /*package*/ final ConceptDescriptor myConceptQuantifierBound = createDescriptorForQuantifierBound();
  /*package*/ final ConceptDescriptor myConceptQuantifierBoundAndExpr = createDescriptorForQuantifierBoundAndExpr();
  /*package*/ final ConceptDescriptor myConceptRangeExprAndExpr = createDescriptorForRangeExprAndExpr();
  /*package*/ final ConceptDescriptor myConceptRangeExprImpliesExpr = createDescriptorForRangeExprImpliesExpr();
  /*package*/ final ConceptDescriptor myConceptRangeExprList = createDescriptorForRangeExprList();
  /*package*/ final ConceptDescriptor myConceptRangeNameArrowExpr = createDescriptorForRangeNameArrowExpr();
  /*package*/ final ConceptDescriptor myConceptRangeNameExpr = createDescriptorForRangeNameExpr();
  /*package*/ final ConceptDescriptor myConceptRangeQuantifierBoundAndExpr = createDescriptorForRangeQuantifierBoundAndExpr();
  /*package*/ final ConceptDescriptor myConceptSeparator = createDescriptorForSeparator();
  /*package*/ final ConceptDescriptor myConceptSetExpr = createDescriptorForSetExpr();
  /*package*/ final ConceptDescriptor myConceptSetExprAndQuantifierBound = createDescriptorForSetExprAndQuantifierBound();
  /*package*/ final ConceptDescriptor myConceptSetIDorTupleAndExpr = createDescriptorForSetIDorTupleAndExpr();
  /*package*/ final ConceptDescriptor myConceptSingleInstancePrefix = createDescriptorForSingleInstancePrefix();
  /*package*/ final ConceptDescriptor myConceptSlashAntiSlahExpr = createDescriptorForSlashAntiSlahExpr();
  /*package*/ final ConceptDescriptor myConceptSlashAntiSlashExprList = createDescriptorForSlashAntiSlashExprList();
  /*package*/ final ConceptDescriptor myConceptSquareAndCaseArm = createDescriptorForSquareAndCaseArm();
  /*package*/ final ConceptDescriptor myConceptStringNode = createDescriptorForStringNode();
  /*package*/ final ConceptDescriptor myConceptSubstitution = createDescriptorForSubstitution();
  /*package*/ final ConceptDescriptor myConceptSubstitution_LHS = createDescriptorForSubstitution_LHS();
  /*package*/ final ConceptDescriptor myConceptTheorem = createDescriptorForTheorem();
  /*package*/ final ConceptDescriptor myConceptTuple = createDescriptorForTuple();
  /*package*/ final ConceptDescriptor myConceptTupleForChoose = createDescriptorForTupleForChoose();
  /*package*/ final ConceptDescriptor myConceptUnderscoreInfixOpUnderscoreNode = createDescriptorForUnderscoreInfixOpUnderscoreNode();
  /*package*/ final ConceptDescriptor myConceptUnit = createDescriptorForUnit();
  /*package*/ final ConceptDescriptor myConceptVariableDeclaration = createDescriptorForVariableDeclaration();
  /*package*/ final ConceptDescriptor myConceptWForSF = createDescriptorForWForSF();
  /*package*/ final ConceptDescriptor myConceptXandExpr = createDescriptorForXandExpr();
  /*package*/ final EnumerationDescriptor myEnumerationAxiom = new EnumerationDescriptor_Axiom();
  /*package*/ final EnumerationDescriptor myEnumerationInfixOp = new EnumerationDescriptor_InfixOp();
  /*package*/ final EnumerationDescriptor myEnumerationPostfixOp = new EnumerationDescriptor_PostfixOp();
  /*package*/ final EnumerationDescriptor myEnumerationPrefixOp = new EnumerationDescriptor_PrefixOp();
  /*package*/ final EnumerationDescriptor myEnumerationRegularQuantifier = new EnumerationDescriptor_RegularQuantifier();
  /*package*/ final EnumerationDescriptor myEnumerationWForSFEnum = new EnumerationDescriptor_WForSFEnum();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeIdentifier = new ConstrainedStringDatatypeDescriptorImpl(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L, "Identifier", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7405347886383843524", "^(?!((ASSUME)$|(ELSE)$|(LOCAL)$|(UNION)$|(ASSUMPTION)$|(ENABLED)$|(MODULE)$|(VARIABLE)$|(AXIOM)$|(EXCEPT)$|(OTHER)$|(VARIABLES)$|(CASE)$|(EXTENDS)$|(CHOOSE)$|(IF)$|(SUBSET)$|(WITH)$|(CONSTANT)$|(IN)$|(THEN)$|(CONSTANTS)$|(INSTANCE)$|(THEOREM)$|(DOMAIN)$|(LET)$|(UNCHANGED)$))^(?!WF_|SF_)(([a-zA-Z]|[0-9]|_)*[a-zA-Z]([a-zA-Z]|[0-9]|_)*)");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeLetter = new ConstrainedStringDatatypeDescriptorImpl(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936caL, "Letter", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7405347886383838922", "[a-zA-Z]");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeName = new ConstrainedStringDatatypeDescriptorImpl(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936c9L, "Name", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7405347886383838921", "^(?!WF_|SF_)(([a-zA-Z]|[0-9]|_)*[a-zA-Z]([a-zA-Z]|[0-9]|_)*)");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeNameChar = new ConstrainedStringDatatypeDescriptorImpl(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936ccL, "NameChar", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7405347886383838924", "[a-zA-Z]|[0-9]|_");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeNumber = new ConstrainedStringDatatypeDescriptorImpl(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03795888L, "Number", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964329608", "([0-9]+)|([0-9]*[.][0-9]+)|(([\\\\b]|[\\\\B])[0-1]+)|(([\\\\o]|[\\\\O])[0-7]+)|(([\\\\h]|[\\\\H])([0-9]|[a-fA-F])+)");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeNumeral = new ConstrainedStringDatatypeDescriptorImpl(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936cbL, "Numeral", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7405347886383838923", "[0-9]");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeOpIdentifier = new ConstrainedStringDatatypeDescriptorImpl(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x47bf6ca76cb8eb85L, "OpIdentifier", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5169970363584015237", "^(?!((ASSUME)$|(ELSE)$|(LOCAL)$|(UNION)$|(ASSUMPTION)$|(ENABLED)$|(MODULE)$|(VARIABLE)$|(AXIOM)$|(EXCEPT)$|(OTHER)$|(VARIABLES)$|(CASE)$|(EXTENDS)$|(CHOOSE)$|(IF)$|(SUBSET)$|(WITH)$|(CONSTANT)$|(IN)$|(THEN)$|(CONSTANTS)$|(INSTANCE)$|(THEOREM)$|(DOMAIN)$|(LET)$|(UNCHANGED)$|(BOOLEAN)$|(TRUE)$|(FALSE)$|(STRING)$))^(?!WF_|SF_)(([a-zA-Z]|[0-9]|_)*[a-zA-Z]([a-zA-Z]|[0-9]|_)*[(]_(,_)*[)])");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeSeparation = new ConstrainedStringDatatypeDescriptorImpl(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x56403e45dffefac8L, "Separation", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/6215035955602979528", "---(-)+");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptABS_LHS, myConceptAntiSlashSlashExpr, myConceptAntiSlashSlashExprList, myConceptArgument, myConceptAssumption, myConceptAxiomNode, myConceptCase, myConceptCaseArm, myConceptCharacterAt, myConceptChooseAndExpressions, myConceptComment, myConceptConstantDeclaration, myConceptDefinition, myConceptExcept, myConceptExceptInterface, myConceptExceptList, myConceptExprAndGeneralInfixOpAndExpr, myConceptExprAndGeneralPostfixOp, myConceptExprAndXAndExpr, myConceptExprTupleAndExpr, myConceptExpression, myConceptExpressionBetweenParentheses, myConceptExpressionTuple, myConceptExtendedModuleName, myConceptFunctionAndRange, myConceptFunctionDefinition, myConceptGeneralIdentifier, myConceptGeneralIdentifierAndArg, myConceptGeneralInfixOp, myConceptGeneralPostfixOp, myConceptGeneralPrefixOp, myConceptGeneralPrefixOpAndExpression, myConceptIDAndInfixOpAndID, myConceptIDAndPostfixOp, myConceptIDOrTupleOrIDList, myConceptIdentifierList, myConceptIdentifierNode, myConceptIdentifierNodeForChoose, myConceptIdentifierOrTuple, myConceptIdentifierOrTupleForChoose, myConceptIf, myConceptInfixOpNode, myConceptInstance, myConceptInstancePrefix, myConceptLet, myConceptLocalFunctionDefinition, myConceptLocalInstance, myConceptLocalModuleDefinition, myConceptLocalOperatorDefinition, myConceptModule, myConceptModuleDefinition, myConceptModuleNameList, myConceptNameArrowExpr, myConceptNameColonExpr, myConceptNonFixLHS, myConceptNumberNode, myConceptOpDecl, myConceptOpDeclList, myConceptOpIdentifierNode, myConceptOperatorDefinition, myConceptOther, myConceptPointAndName, myConceptPostfixOpNode, myConceptPostfixOpUnderscoreNode, myConceptPrefixOpAndID, myConceptPrefixOpNode, myConceptPrefixOpUnderscoreNode, myConceptQuantifierAndIDListAndExpr, myConceptQuantifierBound, myConceptQuantifierBoundAndExpr, myConceptRangeExprAndExpr, myConceptRangeExprImpliesExpr, myConceptRangeExprList, myConceptRangeNameArrowExpr, myConceptRangeNameExpr, myConceptRangeQuantifierBoundAndExpr, myConceptSeparator, myConceptSetExpr, myConceptSetExprAndQuantifierBound, myConceptSetIDorTupleAndExpr, myConceptSingleInstancePrefix, myConceptSlashAntiSlahExpr, myConceptSlashAntiSlashExprList, myConceptSquareAndCaseArm, myConceptStringNode, myConceptSubstitution, myConceptSubstitution_LHS, myConceptTheorem, myConceptTuple, myConceptTupleForChoose, myConceptUnderscoreInfixOpUnderscoreNode, myConceptUnit, myConceptVariableDeclaration, myConceptWForSF, myConceptXandExpr);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.ABS_LHS:
        return myConceptABS_LHS;
      case LanguageConceptSwitch.AntiSlashSlashExpr:
        return myConceptAntiSlashSlashExpr;
      case LanguageConceptSwitch.AntiSlashSlashExprList:
        return myConceptAntiSlashSlashExprList;
      case LanguageConceptSwitch.Argument:
        return myConceptArgument;
      case LanguageConceptSwitch.Assumption:
        return myConceptAssumption;
      case LanguageConceptSwitch.AxiomNode:
        return myConceptAxiomNode;
      case LanguageConceptSwitch.Case:
        return myConceptCase;
      case LanguageConceptSwitch.CaseArm:
        return myConceptCaseArm;
      case LanguageConceptSwitch.CharacterAt:
        return myConceptCharacterAt;
      case LanguageConceptSwitch.ChooseAndExpressions:
        return myConceptChooseAndExpressions;
      case LanguageConceptSwitch.Comment:
        return myConceptComment;
      case LanguageConceptSwitch.ConstantDeclaration:
        return myConceptConstantDeclaration;
      case LanguageConceptSwitch.Definition:
        return myConceptDefinition;
      case LanguageConceptSwitch.Except:
        return myConceptExcept;
      case LanguageConceptSwitch.ExceptInterface:
        return myConceptExceptInterface;
      case LanguageConceptSwitch.ExceptList:
        return myConceptExceptList;
      case LanguageConceptSwitch.ExprAndGeneralInfixOpAndExpr:
        return myConceptExprAndGeneralInfixOpAndExpr;
      case LanguageConceptSwitch.ExprAndGeneralPostfixOp:
        return myConceptExprAndGeneralPostfixOp;
      case LanguageConceptSwitch.ExprAndXAndExpr:
        return myConceptExprAndXAndExpr;
      case LanguageConceptSwitch.ExprTupleAndExpr:
        return myConceptExprTupleAndExpr;
      case LanguageConceptSwitch.Expression:
        return myConceptExpression;
      case LanguageConceptSwitch.ExpressionBetweenParentheses:
        return myConceptExpressionBetweenParentheses;
      case LanguageConceptSwitch.ExpressionTuple:
        return myConceptExpressionTuple;
      case LanguageConceptSwitch.ExtendedModuleName:
        return myConceptExtendedModuleName;
      case LanguageConceptSwitch.FunctionAndRange:
        return myConceptFunctionAndRange;
      case LanguageConceptSwitch.FunctionDefinition:
        return myConceptFunctionDefinition;
      case LanguageConceptSwitch.GeneralIdentifier:
        return myConceptGeneralIdentifier;
      case LanguageConceptSwitch.GeneralIdentifierAndArg:
        return myConceptGeneralIdentifierAndArg;
      case LanguageConceptSwitch.GeneralInfixOp:
        return myConceptGeneralInfixOp;
      case LanguageConceptSwitch.GeneralPostfixOp:
        return myConceptGeneralPostfixOp;
      case LanguageConceptSwitch.GeneralPrefixOp:
        return myConceptGeneralPrefixOp;
      case LanguageConceptSwitch.GeneralPrefixOpAndExpression:
        return myConceptGeneralPrefixOpAndExpression;
      case LanguageConceptSwitch.IDAndInfixOpAndID:
        return myConceptIDAndInfixOpAndID;
      case LanguageConceptSwitch.IDAndPostfixOp:
        return myConceptIDAndPostfixOp;
      case LanguageConceptSwitch.IDOrTupleOrIDList:
        return myConceptIDOrTupleOrIDList;
      case LanguageConceptSwitch.IdentifierList:
        return myConceptIdentifierList;
      case LanguageConceptSwitch.IdentifierNode:
        return myConceptIdentifierNode;
      case LanguageConceptSwitch.IdentifierNodeForChoose:
        return myConceptIdentifierNodeForChoose;
      case LanguageConceptSwitch.IdentifierOrTuple:
        return myConceptIdentifierOrTuple;
      case LanguageConceptSwitch.IdentifierOrTupleForChoose:
        return myConceptIdentifierOrTupleForChoose;
      case LanguageConceptSwitch.If:
        return myConceptIf;
      case LanguageConceptSwitch.InfixOpNode:
        return myConceptInfixOpNode;
      case LanguageConceptSwitch.Instance:
        return myConceptInstance;
      case LanguageConceptSwitch.InstancePrefix:
        return myConceptInstancePrefix;
      case LanguageConceptSwitch.Let:
        return myConceptLet;
      case LanguageConceptSwitch.LocalFunctionDefinition:
        return myConceptLocalFunctionDefinition;
      case LanguageConceptSwitch.LocalInstance:
        return myConceptLocalInstance;
      case LanguageConceptSwitch.LocalModuleDefinition:
        return myConceptLocalModuleDefinition;
      case LanguageConceptSwitch.LocalOperatorDefinition:
        return myConceptLocalOperatorDefinition;
      case LanguageConceptSwitch.Module:
        return myConceptModule;
      case LanguageConceptSwitch.ModuleDefinition:
        return myConceptModuleDefinition;
      case LanguageConceptSwitch.ModuleNameList:
        return myConceptModuleNameList;
      case LanguageConceptSwitch.NameArrowExpr:
        return myConceptNameArrowExpr;
      case LanguageConceptSwitch.NameColonExpr:
        return myConceptNameColonExpr;
      case LanguageConceptSwitch.NonFixLHS:
        return myConceptNonFixLHS;
      case LanguageConceptSwitch.NumberNode:
        return myConceptNumberNode;
      case LanguageConceptSwitch.OpDecl:
        return myConceptOpDecl;
      case LanguageConceptSwitch.OpDeclList:
        return myConceptOpDeclList;
      case LanguageConceptSwitch.OpIdentifierNode:
        return myConceptOpIdentifierNode;
      case LanguageConceptSwitch.OperatorDefinition:
        return myConceptOperatorDefinition;
      case LanguageConceptSwitch.Other:
        return myConceptOther;
      case LanguageConceptSwitch.PointAndName:
        return myConceptPointAndName;
      case LanguageConceptSwitch.PostfixOpNode:
        return myConceptPostfixOpNode;
      case LanguageConceptSwitch.PostfixOpUnderscoreNode:
        return myConceptPostfixOpUnderscoreNode;
      case LanguageConceptSwitch.PrefixOpAndID:
        return myConceptPrefixOpAndID;
      case LanguageConceptSwitch.PrefixOpNode:
        return myConceptPrefixOpNode;
      case LanguageConceptSwitch.PrefixOpUnderscoreNode:
        return myConceptPrefixOpUnderscoreNode;
      case LanguageConceptSwitch.QuantifierAndIDListAndExpr:
        return myConceptQuantifierAndIDListAndExpr;
      case LanguageConceptSwitch.QuantifierBound:
        return myConceptQuantifierBound;
      case LanguageConceptSwitch.QuantifierBoundAndExpr:
        return myConceptQuantifierBoundAndExpr;
      case LanguageConceptSwitch.RangeExprAndExpr:
        return myConceptRangeExprAndExpr;
      case LanguageConceptSwitch.RangeExprImpliesExpr:
        return myConceptRangeExprImpliesExpr;
      case LanguageConceptSwitch.RangeExprList:
        return myConceptRangeExprList;
      case LanguageConceptSwitch.RangeNameArrowExpr:
        return myConceptRangeNameArrowExpr;
      case LanguageConceptSwitch.RangeNameExpr:
        return myConceptRangeNameExpr;
      case LanguageConceptSwitch.RangeQuantifierBoundAndExpr:
        return myConceptRangeQuantifierBoundAndExpr;
      case LanguageConceptSwitch.Separator:
        return myConceptSeparator;
      case LanguageConceptSwitch.SetExpr:
        return myConceptSetExpr;
      case LanguageConceptSwitch.SetExprAndQuantifierBound:
        return myConceptSetExprAndQuantifierBound;
      case LanguageConceptSwitch.SetIDorTupleAndExpr:
        return myConceptSetIDorTupleAndExpr;
      case LanguageConceptSwitch.SingleInstancePrefix:
        return myConceptSingleInstancePrefix;
      case LanguageConceptSwitch.SlashAntiSlahExpr:
        return myConceptSlashAntiSlahExpr;
      case LanguageConceptSwitch.SlashAntiSlashExprList:
        return myConceptSlashAntiSlashExprList;
      case LanguageConceptSwitch.SquareAndCaseArm:
        return myConceptSquareAndCaseArm;
      case LanguageConceptSwitch.StringNode:
        return myConceptStringNode;
      case LanguageConceptSwitch.Substitution:
        return myConceptSubstitution;
      case LanguageConceptSwitch.Substitution_LHS:
        return myConceptSubstitution_LHS;
      case LanguageConceptSwitch.Theorem:
        return myConceptTheorem;
      case LanguageConceptSwitch.Tuple:
        return myConceptTuple;
      case LanguageConceptSwitch.TupleForChoose:
        return myConceptTupleForChoose;
      case LanguageConceptSwitch.UnderscoreInfixOpUnderscoreNode:
        return myConceptUnderscoreInfixOpUnderscoreNode;
      case LanguageConceptSwitch.Unit:
        return myConceptUnit;
      case LanguageConceptSwitch.VariableDeclaration:
        return myConceptVariableDeclaration;
      case LanguageConceptSwitch.WForSF:
        return myConceptWForSF;
      case LanguageConceptSwitch.XandExpr:
        return myConceptXandExpr;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationAxiom, myEnumerationInfixOp, myEnumerationPostfixOp, myEnumerationPrefixOp, myEnumerationRegularQuantifier, myEnumerationWForSFEnum, myCSDatatypeIdentifier, myCSDatatypeLetter, myCSDatatypeName, myCSDatatypeNameChar, myCSDatatypeNumber, myCSDatatypeNumeral, myCSDatatypeOpIdentifier, myCSDatatypeSeparation);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForABS_LHS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ABS_LHS", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4f8aedL);
    b.class_(false, true, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538759367405");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAntiSlashSlashExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "AntiSlashSlashExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0379585eL);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964329566");
    b.version(2);
    b.aggregate("Expr", 0x21a8433e0379585fL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964329567").done();
    b.alias("\\/");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAntiSlashSlashExprList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "AntiSlashSlashExprList", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03795874L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964329588");
    b.version(2);
    b.aggregate("Expr", 0x21a8433e03795875L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0379585eL).optional(false).ordered(true).multiple(true).origin("2425262332964329589").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForArgument() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Argument", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1b6c1L);
    b.class_(false, true, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776886977");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAssumption() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Assumption", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd7bL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888699");
    b.version(2);
    b.aggregate("Axiom", 0x674b5e52c6e1bd9fL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd85L).optional(false).ordered(true).multiple(false).origin("7443146518776888735").done();
    b.aggregate("Expr", 0x674b5e52c6e1bda1L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("7443146518776888737").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAxiomNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "AxiomNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd85L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888709");
    b.version(2);
    b.property("Axiom", 0x674b5e52c6e1bd86L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd7cL)).origin("7443146518776888710").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Case", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e037874f8L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271352");
    b.version(2);
    b.aggregate("CaseArm", 0x21a8433e037874f9L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e037874c1L).optional(false).ordered(true).multiple(false).origin("2425262332964271353").done();
    b.aggregate("SquareAndCaseArm", 0x21a8433e037874fbL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e037874e2L).optional(false).ordered(true).multiple(true).origin("2425262332964271355").done();
    b.aggregate("OptionalOther", 0x21a8433e0378759eL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787500L).optional(true).ordered(true).multiple(false).origin("2425262332964271518").done();
    b.alias("CASE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCaseArm() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "CaseArm", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e037874c1L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271297");
    b.version(2);
    b.aggregate("Expr1", 0x21a8433e037874c2L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271298").done();
    b.aggregate("Expr2", 0x21a8433e037874c4L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271300").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCharacterAt() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "CharacterAt", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2efc45b4e6202be4L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/3385657663133068260");
    b.version(2);
    b.alias("@");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChooseAndExpressions() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ChooseAndExpressions", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x8a35484ed64645aL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/622434103402456154");
    b.version(2);
    b.aggregate("IDorTuple", 0x8a35484ed64645bL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7551f37ec111f703L).optional(false).ordered(true).multiple(false).origin("622434103402456155").done();
    b.aggregate("ExprMandatory", 0x8a35484ed646460L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("622434103402456160").done();
    b.alias("CHOOSE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Comment", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x42041978d66bac86L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/4756955113194237062");
    b.version(2);
    b.aggregate("com", 0x42041978d66baca2L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d96bL).optional(true).ordered(true).multiple(true).origin("4756955113194237090").done();
    b.alias("(*");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConstantDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ConstantDeclaration", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d07c2L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/3180132125891168194");
    b.version(2);
    b.aggregate("OpDeclL", 0x47bf6ca76cb55cfdL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x47bf6ca76cb55cffL).optional(false).ordered(true).multiple(false).origin("5169970363583782141").done();
    b.alias("CONSTANT");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Definition", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378fa0aL);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964305418");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExcept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Except", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e037873d4L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271060");
    b.version(2);
    b.aggregate("ExceptList", 0x21a8433e037873d5L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378739fL).optional(false).ordered(true).multiple(true).origin("2425262332964271061").done();
    b.aggregate("Expr", 0x21a8433e037873d7L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271063").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExceptInterface() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExceptInterface", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787398L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271000");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExceptList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExceptList", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378739fL);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271007");
    b.version(2);
    b.aggregate("OneOrMore", 0x21a8433e037873a0L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787398L).optional(false).ordered(true).multiple(true).origin("2425262332964271008").done();
    b.aggregate("Expr", 0x21a8433e037873a2L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271010").done();
    b.alias("!");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExprAndGeneralInfixOpAndExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExprAndGeneralInfixOpAndExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe4916L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/1760991658762979606");
    b.version(2);
    b.aggregate("Expr1", 0x18704c9560fe4919L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("1760991658762979609").done();
    b.aggregate("Expr2", 0x18704c9560fe491bL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("1760991658762979611").done();
    b.aggregate("GInfixOp", 0x18704c9560fe491eL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd61L).optional(false).ordered(true).multiple(false).origin("1760991658762979614").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExprAndGeneralPostfixOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExprAndGeneralPostfixOp", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe493eL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/1760991658762979646");
    b.version(2);
    b.aggregate("Expr", 0x18704c9560fe493fL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("1760991658762979647").done();
    b.aggregate("GPostfixOp", 0x18704c9560fe4941L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd62L).optional(false).ordered(true).multiple(false).origin("1760991658762979649").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExprAndXAndExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExprAndXAndExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787457L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271191");
    b.version(2);
    b.aggregate("XandExpr", 0x21a8433e03787458L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787437L).optional(false).ordered(true).multiple(true).origin("2425262332964271192").done();
    b.aggregate("Expr", 0x21a8433e0378745aL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271194").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExprTupleAndExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExprTupleAndExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7cf0730880a881b0L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/9002822135469081008");
    b.version(2);
    b.aggregate("Expr1", 0x7cf0730880a881b1L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("9002822135469081009").done();
    b.aggregate("Expr2", 0x7cf0730880a881b3L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("9002822135469081011").done();
    b.alias("<<>>_");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.class_(false, true, false);
    b.super_("TLA.structure.Argument", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1b6c1L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888671");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpressionBetweenParentheses() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExpressionBetweenParentheses", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe4957L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/1760991658762979671");
    b.version(2);
    b.aggregate("Expr", 0x18704c9560fe4958L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("1760991658762979672").done();
    b.alias("()");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExpressionTuple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExpressionTuple", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787414L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271124");
    b.version(2);
    b.aggregate("Expr", 0x21a8433e03787415L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(true).origin("2425262332964271125").done();
    b.alias("<<>>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExtendedModuleName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ExtendedModuleName", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade19ce77L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7405347886383877751");
    b.version(2);
    b.property("ModuleName", 0x66c514aade19ce78L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936c9L)).origin("7405347886383877752").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionAndRange() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "FunctionAndRange", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x5c9787eb913d008eL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/6671950818796437646");
    b.version(2);
    b.aggregate("Expr", 0x5c9787eb913d008fL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("6671950818796437647").done();
    b.aggregate("ExprList", 0x5c9787eb913d0091L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(true).origin("6671950818796437649").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFunctionDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "FunctionDefinition", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac94eL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378fa0aL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483918");
    b.version(2);
    b.property("ID", 0x467903da84aac94fL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("5078094291900483919").done();
    b.aggregate("QuantifierBound", 0x467903da84aac951L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8c1L).optional(false).ordered(true).multiple(true).origin("5078094291900483921").done();
    b.aggregate("Expr", 0x467903da84aac953L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("5078094291900483923").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGeneralIdentifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "GeneralIdentifier", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd63L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888675");
    b.version(2);
    b.property("ID", 0x467903da84aac7e3L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("5078094291900483555").done();
    b.aggregate("InstancePrefix", 0x467903da84aac7e1L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd64L).optional(true).ordered(true).multiple(false).origin("5078094291900483553").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGeneralIdentifierAndArg() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "GeneralIdentifierAndArg", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84c0bfdcL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291901923292");
    b.version(2);
    b.aggregate("GeneralID", 0x467903da84c0bfddL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd63L).optional(false).ordered(true).multiple(false).origin("5078094291901923293").done();
    b.aggregate("Args", 0x467903da84c0bfdfL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1b6c1L).optional(false).ordered(true).multiple(true).origin("5078094291901923295").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGeneralInfixOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "GeneralInfixOp", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd61L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Argument", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1b6c1L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888673");
    b.version(2);
    b.property("InfixOp", 0x467903da84aac811L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a43edcbL)).origin("5078094291900483601").done();
    b.aggregate("InstancePrefix", 0x467903da84aac813L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd64L).optional(true).ordered(true).multiple(false).origin("5078094291900483603").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGeneralPostfixOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "GeneralPostfixOp", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd62L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Argument", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1b6c1L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888674");
    b.version(2);
    b.property("PostfixOp", 0x467903da84aac828L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4401e9L)).origin("5078094291900483624").done();
    b.aggregate("InstancePrefix", 0x467903da84aac82aL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd64L).optional(true).ordered(true).multiple(false).origin("5078094291900483626").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGeneralPrefixOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "GeneralPrefixOp", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd60L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Argument", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1b6c1L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888672");
    b.version(2);
    b.aggregate("InstancePrefix", 0x467903da84aac7faL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd64L).optional(true).ordered(true).multiple(false).origin("5078094291900483578").done();
    b.aggregate("PrefixOp", 0x42571c54e9b4e015L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd0cL).optional(false).ordered(true).multiple(false).origin("4780320680500846613").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGeneralPrefixOpAndExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "GeneralPrefixOpAndExpression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84c0c00dL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291901923341");
    b.version(2);
    b.aggregate("GPrefixOp", 0x467903da84c0c00eL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd60L).optional(false).ordered(true).multiple(false).origin("5078094291901923342").done();
    b.aggregate("Expr", 0x467903da84c0c010L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("5078094291901923344").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDAndInfixOpAndID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "IDAndInfixOpAndID", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac87aL);
    b.class_(false, false, false);
    b.super_("TLA.structure.ABS_LHS", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4f8aedL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483706");
    b.version(2);
    b.property("ID1", 0x467903da84aac87bL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("5078094291900483707").done();
    b.property("ID2", 0x467903da84aac87dL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("5078094291900483709").done();
    b.property("InfixOp", 0x467903da84aac884L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a43edcbL)).origin("5078094291900483716").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDAndPostfixOp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "IDAndPostfixOp", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8a8L);
    b.class_(false, false, false);
    b.super_("TLA.structure.ABS_LHS", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4f8aedL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483752");
    b.version(2);
    b.property("ID", 0x467903da84aac8a9L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("5078094291900483753").done();
    b.property("PostfixOp", 0x467903da84aac8abL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4401e9L)).origin("5078094291900483755").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIDOrTupleOrIDList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "IDOrTupleOrIDList", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8f0L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483824");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIdentifierList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "IdentifierList", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d97cL);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8f0L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/4868806967081359740");
    b.version(2);
    b.aggregate("ID", 0x43917a23f8d4d97dL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d96bL).optional(false).ordered(true).multiple(true).origin("4868806967081359741").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIdentifierNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "IdentifierNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d96bL);
    b.class_(false, false, false);
    b.super_("TLA.structure.OpDecl", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade182459L);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd07L);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8e1L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/4868806967081359723");
    b.version(2);
    b.property("ID", 0x43917a23f8d4d96cL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("4868806967081359724").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIdentifierNodeForChoose() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "IdentifierNodeForChoose", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7551f37ec111f705L);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7551f37ec111f703L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/8453805701281740549");
    b.version(2);
    b.property("ID", 0x7551f37ec111f706L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("8453805701281740550").done();
    b.aggregate("ExprOption", 0x70c5d7f04f50eabdL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(true).ordered(true).multiple(false).origin("8126138529782753981").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIdentifierOrTuple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "IdentifierOrTuple", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8e1L);
    b.interface_();
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8f0L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483809");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIdentifierOrTupleForChoose() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "IdentifierOrTupleForChoose", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7551f37ec111f703L);
    b.interface_();
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8f0L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/8453805701281740547");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIf() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "If", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787474L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271220");
    b.version(2);
    b.aggregate("Expr1", 0x21a8433e03787475L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271221").done();
    b.aggregate("Expr2", 0x21a8433e03787477L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271223").done();
    b.aggregate("Expr3", 0x21a8433e0378747aL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271226").done();
    b.alias("IF");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInfixOpNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "InfixOpNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd1cL);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd07L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888604");
    b.version(2);
    b.property("InfixOp", 0x674b5e52c6e1bd1dL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a43edcbL)).origin("7443146518776888605").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Instance", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a50d38bL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538759451531");
    b.version(2);
    b.property("Name", 0x6b3146ab9a50d852L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936c9L)).origin("7724032538759452754").done();
    b.aggregate("Substitution", 0x6b3146ab9a50d87bL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a50d87aL).optional(true).ordered(true).multiple(true).origin("7724032538759452795").done();
    b.alias("INSTANCE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInstancePrefix() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "InstancePrefix", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd64L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888676");
    b.version(2);
    b.aggregate("InstancePrefixList", 0x674b5e52c6e1bde4L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bde3L).optional(false).ordered(true).multiple(true).origin("7443146518776888804").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLet() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Let", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378fa13L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964305427");
    b.version(2);
    b.aggregate("Def", 0x21a8433e037957f2L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378fa0aL).optional(false).ordered(true).multiple(true).origin("2425262332964329458").done();
    b.aggregate("Expr", 0x21a8433e037957f4L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964329460").done();
    b.alias("LET");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalFunctionDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "LocalFunctionDefinition", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84b2558eL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900978574");
    b.version(2);
    b.aggregate("FDef", 0x467903da84b2558fL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac94eL).optional(false).ordered(true).multiple(false).origin("5078094291900978575").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "LocalInstance", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a528d19L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538759564569");
    b.version(2);
    b.aggregate("Instance", 0x2ee436a8e47f2abcL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a50d38bL).optional(false).ordered(true).multiple(false).origin("3378885719450659516").done();
    b.alias("LOCAL INSTANCE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalModuleDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "LocalModuleDefinition", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a50c482L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538759447682");
    b.version(2);
    b.aggregate("ModDef", 0x2ee436a8e483bc7cL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x47bf6ca76cb568a0L).optional(false).ordered(true).multiple(false).origin("3378885719450958972").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLocalOperatorDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "LocalOperatorDefinition", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84b255a4L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900978596");
    b.version(2);
    b.aggregate("OpDef", 0x467903da84b255a5L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac83fL).optional(false).ordered(true).multiple(false).origin("5078094291900978597").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Module", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade18245bL);
    b.class_(false, false, true);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7405347886383768667");
    b.version(2);
    b.property("ModuleName", 0x66c514aade19a4b0L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936c9L)).origin("7405347886383867056").done();
    b.aggregate("SetOfUnits", 0x66c514aade1936a2L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL).optional(true).ordered(true).multiple(true).origin("7405347886383838882").done();
    b.aggregate("SetOfModuleNames", 0x66c514aade19ce7bL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x3f9c65b68f3e2c45L).optional(false).ordered(true).multiple(false).origin("7405347886383877755").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModuleDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ModuleDefinition", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x47bf6ca76cb568a0L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378fa0aL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5169970363583785120");
    b.version(2);
    b.property("isLocal", 0x47bf6ca76cb568c5L).type(PrimitiveTypeId.BOOLEAN).origin("5169970363583785157").done();
    b.aggregate("NonFixLHS", 0x6b3146ab9a50cdecL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4f8b04L).optional(false).ordered(true).multiple(false).origin("7724032538759450092").done();
    b.aggregate("Instance", 0x6b3146ab9a50d38cL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a50d38bL).optional(false).ordered(true).multiple(false).origin("7724032538759451532").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModuleNameList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "ModuleNameList", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x3f9c65b68f3e2c45L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/4583650355517992005");
    b.version(2);
    b.aggregate("ListM", 0x3f9c65b68f3e2c46L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade19ce77L).optional(true).ordered(true).multiple(true).origin("4583650355517992006").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNameArrowExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "NameArrowExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2efc45b4e6202b74L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/3385657663133068148");
    b.version(2);
    b.property("NameProperty", 0x2efc45b4e6202b75L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936c9L)).origin("3385657663133068149").done();
    b.aggregate("Expr", 0x2efc45b4e6202b77L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("3385657663133068151").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNameColonExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "NameColonExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787318L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964270872");
    b.version(2);
    b.property("NameProperty", 0x21a8433e03787319L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936c9L)).origin("2425262332964270873").done();
    b.aggregate("Expr", 0x21a8433e0378731bL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(true).ordered(true).multiple(false).origin("2425262332964270875").done();
    b.alias(":");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonFixLHS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "NonFixLHS", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4f8b04L);
    b.class_(false, false, false);
    b.super_("TLA.structure.ABS_LHS", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4f8aedL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538759367428");
    b.version(2);
    b.property("ID", 0x6b3146ab9a4f8b05L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("7724032538759367429").done();
    b.aggregate("SetOfOpDecl", 0x6b3146ab9a4f9c12L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade182459L).optional(true).ordered(true).multiple(true).origin("7724032538759371794").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumberNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "NumberNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2efc45b4e6202bd5L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/3385657663133068245");
    b.version(2);
    b.property("Number", 0x2efc45b4e6202bd6L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03795888L)).origin("3385657663133068246").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpDecl() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "OpDecl", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade182459L);
    b.class_(false, true, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7405347886383768665");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpDeclList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "OpDeclList", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x47bf6ca76cb55cffL);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5169970363583782143");
    b.version(2);
    b.aggregate("OpDeclarations", 0x47bf6ca76cb55d00L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade182459L).optional(false).ordered(true).multiple(true).origin("5169970363583782144").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOpIdentifierNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "OpIdentifierNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x47bf6ca76cb8eb86L);
    b.class_(false, false, false);
    b.super_("TLA.structure.OpDecl", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade182459L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5169970363584015238");
    b.version(2);
    b.property("OpId", 0x47bf6ca76cb8eb87L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x47bf6ca76cb8eb85L)).origin("5169970363584015239").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOperatorDefinition() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "OperatorDefinition", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac83fL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378fa0aL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483647");
    b.version(2);
    b.aggregate("LHS", 0x467903da84aac840L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4f8aedL).optional(false).ordered(true).multiple(false).origin("5078094291900483648").done();
    b.aggregate("Expr", 0x467903da84aac842L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("5078094291900483650").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOther() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Other", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787500L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271360");
    b.version(2);
    b.aggregate("Expr", 0x21a8433e03787501L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271361").done();
    b.alias("OTHER");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPointAndName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "PointAndName", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0378735dL);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787398L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964270941");
    b.version(2);
    b.property("NameProperty", 0x21a8433e0378735eL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1936c9L)).origin("2425262332964270942").done();
    b.alias(".");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPostfixOpNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "PostfixOpNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd2cL);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd07L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888620");
    b.version(2);
    b.property("PostfixOp", 0x674b5e52c6e1bd2dL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4401e9L)).origin("7443146518776888621").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPostfixOpUnderscoreNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "PostfixOpUnderscoreNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a440761L);
    b.class_(false, false, false);
    b.super_("TLA.structure.OpDecl", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade182459L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538758612833");
    b.version(2);
    b.property("PostfixOp", 0x6b3146ab9a440762L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4401e9L)).origin("7724032538758612834").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrefixOpAndID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "PrefixOpAndID", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac861L);
    b.class_(false, false, false);
    b.super_("TLA.structure.ABS_LHS", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a4f8aedL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483681");
    b.version(2);
    b.property("ID", 0x467903da84aac862L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("5078094291900483682").done();
    b.aggregate("PrefixOp", 0x42571c54e9b4c52cL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd0cL).optional(false).ordered(true).multiple(false).origin("4780320680500839724").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrefixOpNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "PrefixOpNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd0cL);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd07L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888588");
    b.version(2);
    b.property("PrefixOp", 0x674b5e52c6e1bd0dL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x47bf6ca76cb8eb37L)).origin("7443146518776888589").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrefixOpUnderscoreNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "PrefixOpUnderscoreNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a436213L);
    b.class_(false, false, false);
    b.super_("TLA.structure.OpDecl", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade182459L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538758570515");
    b.version(2);
    b.aggregate("PrefixOp", 0x42571c54e9b4cd97L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd0cL).optional(false).ordered(true).multiple(false).origin("4780320680500841879").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQuantifierAndIDListAndExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "QuantifierAndIDListAndExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe49d9L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/1760991658762979801");
    b.version(2);
    b.property("EorA", 0x18704c9560fe49daL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe4979L)).origin("1760991658762979802").done();
    b.aggregate("IDList", 0x18704c9560fe49dcL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d97cL).optional(false).ordered(true).multiple(false).origin("1760991658762979804").done();
    b.aggregate("Expr", 0x18704c9560fe49deL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("1760991658762979806").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQuantifierBound() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "QuantifierBound", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8c1L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483777");
    b.version(2);
    b.aggregate("IDs", 0x467903da84aac8f7L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8f0L).optional(false).ordered(true).multiple(false).origin("5078094291900483831").done();
    b.aggregate("Expr", 0x467903da84aac8f9L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("5078094291900483833").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQuantifierBoundAndExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "QuantifierBoundAndExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe4977L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/1760991658762979703");
    b.version(2);
    b.property("EorA", 0x18704c9560fe498aL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe4979L)).origin("1760991658762979722").done();
    b.aggregate("QBList", 0x18704c9560fe498cL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8c1L).optional(false).ordered(true).multiple(true).origin("1760991658762979724").done();
    b.aggregate("Expr", 0x18704c9560fe498eL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("1760991658762979726").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRangeExprAndExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "RangeExprAndExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7cf0730880a8b269L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/9002822135469093481");
    b.version(2);
    b.aggregate("Expr1", 0x7cf0730880a8b26aL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("9002822135469093482").done();
    b.aggregate("Expr2", 0x7cf0730880a8b26cL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("9002822135469093484").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRangeExprImpliesExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "RangeExprImpliesExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x5c9787eb913d00f8L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/6671950818796437752");
    b.version(2);
    b.aggregate("Expr1", 0x5c9787eb913d00f9L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("6671950818796437753").done();
    b.aggregate("Expr2", 0x5c9787eb913d00fbL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("6671950818796437755").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRangeExprList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "RangeExprList", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787373L);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787398L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964270963");
    b.version(2);
    b.aggregate("ExprList", 0x21a8433e03787374L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(true).origin("2425262332964270964").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRangeNameArrowExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "RangeNameArrowExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2efc45b4e6202b94L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/3385657663133068180");
    b.version(2);
    b.aggregate("NameArrowExprList", 0x2efc45b4e6202b95L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2efc45b4e6202b74L).optional(false).ordered(true).multiple(true).origin("3385657663133068181").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRangeNameExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "RangeNameExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787317L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964270871");
    b.version(2);
    b.aggregate("ExprList", 0x21a8433e03787339L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787318L).optional(false).ordered(true).multiple(true).origin("2425262332964270905").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRangeQuantifierBoundAndExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "RangeQuantifierBoundAndExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x5c9787eb913d00c1L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/6671950818796437697");
    b.version(2);
    b.aggregate("QuantifierBoundList", 0x5c9787eb913d00c2L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8c1L).optional(false).ordered(true).multiple(true).origin("6671950818796437698").done();
    b.aggregate("Expr", 0x5c9787eb913d00c4L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("6671950818796437700").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSeparator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Separator", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac9a1L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900484001");
    b.version(2);
    b.property("sep", 0x56403e45dffefac9L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x56403e45dffefac8L)).origin("6215035955602979529").done();
    b.alias("----");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "SetExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x5c9787eb913321f3L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/6671950818795790835");
    b.version(2);
    b.aggregate("Expressions", 0x5c9787eb913321f4L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(true).ordered(true).multiple(true).origin("6671950818795790836").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetExprAndQuantifierBound() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "SetExprAndQuantifierBound", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x5c9787eb913d004cL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/6671950818796437580");
    b.version(2);
    b.aggregate("Expr", 0x5c9787eb913d004dL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("6671950818796437581").done();
    b.aggregate("QuantifierBound", 0x5c9787eb913d004fL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8c1L).optional(false).ordered(true).multiple(true).origin("6671950818796437583").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSetIDorTupleAndExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "SetIDorTupleAndExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x5c9787eb913cfd6eL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/6671950818796436846");
    b.version(2);
    b.aggregate("IDorTuple", 0x5c9787eb913cfd6fL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8e1L).optional(false).ordered(true).multiple(false).origin("6671950818796436847").done();
    b.aggregate("Expr1", 0x5c9787eb913cfd71L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("6671950818796436849").done();
    b.aggregate("Expr2", 0x5c9787eb913cfd74L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("6671950818796436852").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSingleInstancePrefix() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "SingleInstancePrefix", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bde3L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888803");
    b.version(2);
    b.property("ID", 0x674b5e52c6e1bde6L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade1948c4L)).origin("7443146518776888806").done();
    b.aggregate("Exprs", 0x674b5e52c6e1bdf4L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(true).ordered(true).multiple(true).origin("7443146518776888820").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSlashAntiSlahExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "SlashAntiSlahExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03795835L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964329525");
    b.version(2);
    b.aggregate("Expr", 0x21a8433e03795836L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964329526").done();
    b.alias("/\\");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSlashAntiSlashExprList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "SlashAntiSlashExprList", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e0379584bL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964329547");
    b.version(2);
    b.aggregate("Expr", 0x21a8433e0379584cL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03795835L).optional(false).ordered(true).multiple(true).origin("2425262332964329548").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquareAndCaseArm() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "SquareAndCaseArm", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e037874e2L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271330");
    b.version(2);
    b.aggregate("CaseArm", 0x21a8433e037874e3L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e037874c1L).optional(false).ordered(true).multiple(false).origin("2425262332964271331").done();
    b.alias("[]");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "StringNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2efc45b4e6202bc6L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/3385657663133068230");
    b.version(2);
    b.property("Str", 0x2efc45b4e6202bc7L).type(PrimitiveTypeId.STRING).origin("3385657663133068231").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstitution() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Substitution", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a50d87aL);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538759452794");
    b.version(2);
    b.aggregate("substitLHS", 0x674b5e52c6e1bd3cL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd07L).optional(false).ordered(true).multiple(false).origin("7443146518776888636").done();
    b.aggregate("Arg", 0x674b5e52c6e1bd55L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1b6c1L).optional(false).ordered(true).multiple(false).origin("7443146518776888661").done();
    b.alias("<-");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstitution_LHS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Substitution_LHS", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd07L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888583");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTheorem() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Theorem", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd65L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7443146518776888677");
    b.version(2);
    b.aggregate("Expr", 0x674b5e52c6e1bd66L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("7443146518776888678").done();
    b.alias("THEOREM");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTuple() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Tuple", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8c2L);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x467903da84aac8e1L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/5078094291900483778");
    b.version(2);
    b.aggregate("IDList", 0x467903da84aac8c3L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d97cL).optional(false).ordered(true).multiple(false).origin("5078094291900483779").done();
    b.alias("<<>>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTupleForChoose() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "TupleForChoose", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7551f37ec111f722L);
    b.class_(false, false, false);
    b.parent(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7551f37ec111f703L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/8453805701281740578");
    b.version(2);
    b.aggregate("IDList", 0x7551f37ec111f723L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d97cL).optional(false).ordered(true).multiple(false).origin("8453805701281740579").done();
    b.aggregate("ExprOption", 0x70c5d7f04f50eabfL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(true).ordered(true).multiple(false).origin("8126138529782753983").done();
    b.alias("<<>>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnderscoreInfixOpUnderscoreNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "UnderscoreInfixOpUnderscoreNode", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a44077bL);
    b.class_(false, false, false);
    b.super_("TLA.structure.OpDecl", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade182459L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7724032538758612859");
    b.version(2);
    b.property("InfixOp", 0x6b3146ab9a44077cL).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6b3146ab9a43edcbL)).origin("7724032538758612860").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUnit() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.class_(false, true, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Statement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/3180132125891167962");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVariableDeclaration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "VariableDeclaration", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d0789L);
    b.class_(false, false, false);
    b.super_("TLA.structure.Unit", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x2c221951c68d06daL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/3180132125891168137");
    b.version(2);
    b.aggregate("IDList", 0x43917a23f8d4d97aL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d97cL).optional(false).ordered(true).multiple(false).origin("4868806967081359738").done();
    b.alias("VARIABLE");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWForSF() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "WForSF", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6dd00814ec11c1fbL);
    b.class_(false, false, false);
    b.super_("TLA.structure.Expression", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/7912833431242916347");
    b.version(2);
    b.property("WFSF", 0x4fd719163e303eb2L).type(MetaIdFactory.dataTypeId(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x6dd00814ec11c1f6L)).origin("5753094632312422066").done();
    b.aggregate("Expr1", 0x6dd00814ec11c1fcL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("7912833431242916348").done();
    b.aggregate("Expr2", 0x6dd00814ec11c1feL).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("7912833431242916350").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForXandExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("TLA", "XandExpr", 0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x21a8433e03787437L);
    b.class_(false, false, false);
    b.origin("r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/2425262332964271159");
    b.version(2);
    b.aggregate("Expr", 0x21a8433e03787438L).target(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x674b5e52c6e1bd5fL).optional(false).ordered(true).multiple(false).origin("2425262332964271160").done();
    b.alias("x");
    return b.create();
  }
}
