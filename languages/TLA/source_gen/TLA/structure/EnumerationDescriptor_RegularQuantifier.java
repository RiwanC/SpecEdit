package TLA.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_RegularQuantifier extends EnumerationDescriptorBase {

  public EnumerationDescriptor_RegularQuantifier() {
    super(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe4979L, "RegularQuantifier", "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/1760991658762979705");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_A_0 = new EnumerationDescriptor.MemberDescriptor("A", "∀", 0x18704c9560fe497aL, "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/1760991658762979706");
  private final EnumerationDescriptor.MemberDescriptor myMember_E_0 = new EnumerationDescriptor.MemberDescriptor("E", "∃", 0x18704c9560fe497bL, "r:3f6b7621-97d8-464c-bb3b-fdae13d84a79(TLA.structure)/1760991658762979707");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x18704c9560fe4979L, 0x18704c9560fe497aL, 0x18704c9560fe497bL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_A_0, myMember_E_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "A":
        return myMember_A_0;
      case "E":
        return myMember_E_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
