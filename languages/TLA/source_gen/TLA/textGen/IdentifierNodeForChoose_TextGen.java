package TLA.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class IdentifierNodeForChoose_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.ID$2Job));
    if ((SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.ExprOption$dC4N) != null)) {
      tgs.append(" \\in ");
      tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.ExprOption$dC4N));
    }
  }

  private static final class PROPS {
    /*package*/ static final SProperty ID$2Job = MetaAdapterFactory.getProperty(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7551f37ec111f705L, 0x7551f37ec111f706L, "ID");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink ExprOption$dC4N = MetaAdapterFactory.getContainmentLink(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x7551f37ec111f705L, 0x70c5d7f04f50eabdL, "ExprOption");
  }
}
