package Paster.plugin;

/*Generated by MPS */

import parser.TLAPlusGrammarBaseVisitor;
import parser.TLAPlusGrammarParser;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class AntlrUnitVisitor extends TLAPlusGrammarBaseVisitor {

  @Override
  public Object visitNameList(TLAPlusGrammarParser.NameListContext ctx) {
    SNode namelist = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d97cL, "TLA.structure.IdentifierList"));
    for (int i = 0; i < (ctx.getChildCount() + 1) / 2; i++) {
      SNode idNode = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d96bL, "TLA.structure.IdentifierNode"));
      SPropertyOperations.assign(idNode, PROPS.ID$ll3w, ctx.Identifier(0).getText());
      ListSequence.fromList(SLinkOperations.getChildren(namelist, LINKS.ID$llx0)).addElement(idNode);
    }
    return namelist;
  }

  @Override
  public Object visitModule(TLAPlusGrammarParser.ModuleContext ctx) {
    SNode moduleNode = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade18245bL, "TLA.structure.Module"));
    SPropertyOperations.assign(moduleNode, PROPS.ModuleName$iAUB, ctx.Identifier().getText());
    if (ctx.EXTENDS() != null) {
      SLinkOperations.setTarget(moduleNode, LINKS.SetOfModuleNames$Bn0, SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x3f9c65b68f3e2c45L, "TLA.structure.ModuleNameList")));
      for (int i = 0; i < (ctx.nameList().getChildCount() + 1) / 2; i++) {
        SNode emn = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade19ce77L, "TLA.structure.ExtendedModuleName"));
        SPropertyOperations.assign(emn, PROPS.ModuleName$Lfj0, ctx.nameList().Identifier(i).getText());
        ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(moduleNode, LINKS.SetOfModuleNames$Bn0), LINKS.ListM$Vevw)).addElement(emn);
      }
    }
    return moduleNode;
  }
  @Override
  public Object visitUnit(TLAPlusGrammarParser.UnitContext ctx) {
    return null;
  }
  @Override
  public Object visitOpDeclList(TLAPlusGrammarParser.OpDeclListContext ctx) {
    return null;
  }
  @Override
  public Object visitVariableDeclaration(TLAPlusGrammarParser.VariableDeclarationContext ctx) {
    return null;
  }
  @Override
  public Object visitConstantDeclaration(TLAPlusGrammarParser.ConstantDeclarationContext ctx) {
    return null;
  }
  @Override
  public Object visitOperatorDefinition(TLAPlusGrammarParser.OperatorDefinitionContext ctx) {
    return null;
  }
  @Override
  public Object visitQuantifierBoundList(TLAPlusGrammarParser.QuantifierBoundListContext ctx) {
    return null;
  }
  @Override
  public Object visitFunctionDefinition(TLAPlusGrammarParser.FunctionDefinitionContext ctx) {
    return null;
  }
  @Override
  public Object visitSubstitutionList(TLAPlusGrammarParser.SubstitutionListContext ctx) {
    return null;
  }
  @Override
  public Object visitInstance(TLAPlusGrammarParser.InstanceContext ctx) {
    return null;
  }
  @Override
  public Object visitModuleDefinition(TLAPlusGrammarParser.ModuleDefinitionContext ctx) {
    return null;
  }
  @Override
  public Object visitAssumption(TLAPlusGrammarParser.AssumptionContext ctx) {
    return null;
  }
  @Override
  public Object visitTheorem(TLAPlusGrammarParser.TheoremContext ctx) {
    return null;
  }
  @Override
  public Object visitUnderscoreList(TLAPlusGrammarParser.UnderscoreListContext ctx) {
    return null;
  }
  @Override
  public Object visitOpDecl(TLAPlusGrammarParser.OpDeclContext ctx) {
    return null;
  }
  @Override
  public Object visitIdOrOpDeclList(TLAPlusGrammarParser.IdOrOpDeclListContext ctx) {
    return null;
  }
  @Override
  public Object visitNonFixLHS(TLAPlusGrammarParser.NonFixLHSContext ctx) {
    return null;
  }
  @Override
  public Object visitQuantifierBound(TLAPlusGrammarParser.QuantifierBoundContext ctx) {
    return null;
  }
  @Override
  public Object visitSubstitution(TLAPlusGrammarParser.SubstitutionContext ctx) {
    return null;
  }
  @Override
  public Object visitArgument(TLAPlusGrammarParser.ArgumentContext ctx) {
    return null;
  }
  @Override
  public Object visitExpressionList(TLAPlusGrammarParser.ExpressionListContext ctx) {
    return null;
  }
  @Override
  public Object visitInstancePrefix(TLAPlusGrammarParser.InstancePrefixContext ctx) {
    return null;
  }
  @Override
  public Object visitGeneralIdentifier(TLAPlusGrammarParser.GeneralIdentifierContext ctx) {
    return null;
  }
  @Override
  public Object visitGeneralPrefixOp(TLAPlusGrammarParser.GeneralPrefixOpContext ctx) {
    return null;
  }
  @Override
  public Object visitGeneralInfixOp(TLAPlusGrammarParser.GeneralInfixOpContext ctx) {
    return null;
  }
  @Override
  public Object visitGeneralPostfixOp(TLAPlusGrammarParser.GeneralPostfixOpContext ctx) {
    return null;
  }
  @Override
  public Object visitCaseArm(TLAPlusGrammarParser.CaseArmContext ctx) {
    return null;
  }
  @Override
  public Object visitNameArrowExprList(TLAPlusGrammarParser.NameArrowExprListContext ctx) {
    return null;
  }
  @Override
  public Object visitNameColonExprList(TLAPlusGrammarParser.NameColonExprListContext ctx) {
    return null;
  }
  @Override
  public Object visitExceptList(TLAPlusGrammarParser.ExceptListContext ctx) {
    return null;
  }
  @Override
  public Object visitExpression(TLAPlusGrammarParser.ExpressionContext ctx) {
    return null;
  }
  @Override
  public Object visitIdentifierList(TLAPlusGrammarParser.IdentifierListContext ctx) {
    SNode idList = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d97cL, "TLA.structure.IdentifierList"));
    for (int i = 0; i < (ctx.getChildCount() + 1) / 2; i++) {
      SNode idNode = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d96bL, "TLA.structure.IdentifierNode"));
      SPropertyOperations.assign(idNode, PROPS.ID$ll3w, ctx.Identifier(i).getText());
      ListSequence.fromList(SLinkOperations.getChildren(idList, LINKS.ID$llx0)).addElement(idNode);
    }
    return null;
  }
  @Override
  public Object visitIdentifierOrTuple(TLAPlusGrammarParser.IdentifierOrTupleContext ctx) {
    return null;
  }
  @Override
  public Object visitPrefixOp(TLAPlusGrammarParser.PrefixOpContext ctx) {
    return null;
  }
  @Override
  public Object visitInfixOp(TLAPlusGrammarParser.InfixOpContext ctx) {
    return null;
  }
  @Override
  public Object visitPostfixOp(TLAPlusGrammarParser.PostfixOpContext ctx) {
    return null;
  }

  private static final class PROPS {
    /*package*/ static final SProperty ID$ll3w = MetaAdapterFactory.getProperty(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d96bL, 0x43917a23f8d4d96cL, "ID");
    /*package*/ static final SProperty ModuleName$iAUB = MetaAdapterFactory.getProperty(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade18245bL, 0x66c514aade19a4b0L, "ModuleName");
    /*package*/ static final SProperty ModuleName$Lfj0 = MetaAdapterFactory.getProperty(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade19ce77L, 0x66c514aade19ce78L, "ModuleName");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink ID$llx0 = MetaAdapterFactory.getContainmentLink(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x43917a23f8d4d97cL, 0x43917a23f8d4d97dL, "ID");
    /*package*/ static final SContainmentLink SetOfModuleNames$Bn0 = MetaAdapterFactory.getContainmentLink(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade18245bL, 0x66c514aade19ce7bL, "SetOfModuleNames");
    /*package*/ static final SContainmentLink ListM$Vevw = MetaAdapterFactory.getContainmentLink(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x3f9c65b68f3e2c45L, 0x3f9c65b68f3e2c46L, "ListM");
  }
}
