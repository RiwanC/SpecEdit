package MpsPersistence.Persistence.TLA;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jdom.Document;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SNodeId;
import org.jdom.Element;
import org.jdom.Attribute;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.List;
import org.jdom.Namespace;
import org.jdom.Content;
import jetbrains.mps.internal.collections.runtime.Sequence;
import org.jdom.Comment;
import jetbrains.mps.internal.collections.runtime.ISelector;
import org.jdom.ProcessingInstruction;
import org.jdom.CDATA;
import org.jdom.Text;
import org.jdom.EntityRef;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SNodeBuilder;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

public class TlaConverter {

  public static SNode convertDocument(String name, Document document) {
    // TODO replace dom-based implementation with a good XML parser 
    SNode file = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade18245bL, "TLA.structure.Module"));
    SPropertyOperations.assign(file, PROPS.ModuleName$iAUB, name);
    SLinkOperations.addNewChild(file, LINKS.SetOfUnits$fqCa, null);
    ((jetbrains.mps.smodel.SNode) file).setId(SNodeId.fromString("~" + name));
    return file;
  }

  private static SNode convertElement(Element elem) {
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b10b2L, "jetbrains.mps.core.xml.structure.XmlElement"));
    String namespacePrefix = elem.getNamespacePrefix();
    SPropertyOperations.assign(result, PROPS.tagName$U00C, ((namespacePrefix == null || namespacePrefix.length() == 0) ? elem.getName() : namespacePrefix + ":" + elem.getName()));
    for (Attribute a : ListSequence.fromList((List<Attribute>) elem.getAttributes())) {
      ListSequence.fromList(SLinkOperations.getChildren(result, LINKS.attributes$U009)).addElement(convertAttribute(a));
    }
    List<Namespace> additionalNamespaces = (List<Namespace>) elem.getAdditionalNamespaces();
    for (Namespace ns : ListSequence.fromList(additionalNamespaces)) {
      ListSequence.fromList(SLinkOperations.getChildren(result, LINKS.attributes$U009)).addElement(createXmlAttribute_a5l4yz_a0a0a5a3(convertAttributeText(ns.getURI()), "xmlns:" + ns.getPrefix()));
    }

    List<Content> list = (List<Content>) elem.getContent();
    Content[] contents = ListSequence.fromList(list).toGenericArray(Content.class);
    for (int i = 0; i < contents.length; i++) {
      Iterable<SNode> content = convertContent((i > 0 ? contents[i - 1] : null), contents[i], (i + 1 < contents.length ? contents[i + 1] : null));
      if (content != null) {
        ListSequence.fromList(SLinkOperations.getChildren(result, LINKS.content$$sMt)).addSequence(Sequence.fromIterable(content));
      }

    }
    SPropertyOperations.assign(result, PROPS.shortEmptyNotation$5AI0, elem.getContentSize() == 0);
    return result;
  }
  private static Iterable<SNode> convertContent(Content prev, Content c, Content next) {
    if (c instanceof Element) {
      return Sequence.<SNode>singleton(convertElement((Element) c));
    } else if (c instanceof Comment) {
      String commentText = ((Comment) c).getText();
      SNode res = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c5494878L, "jetbrains.mps.core.xml.structure.XmlComment"));
      ListSequence.fromList(SLinkOperations.getChildren(res, LINKS.lines$Yj0Q)).addSequence(Sequence.fromIterable(Sequence.fromArray(commentText.split("\r?\n"))).select(new ISelector<String, SNode>() {
        public SNode select(String it) {
          return createXmlCommentLine_a5l4yz_a0a0a0a0c0a0a4(it);
        }
      }));
      return Sequence.<SNode>singleton(res);

    } else if (c instanceof ProcessingInstruction) {
      ProcessingInstruction pi = (ProcessingInstruction) c;
      return Sequence.<SNode>singleton(createXmlProcessingInstruction_a5l4yz_a0a1a1a0e(pi.getTarget(), pi.getData()));
    } else if (c instanceof CDATA) {
      String cdata = ((Text) c).getText();
      return Sequence.<SNode>singleton(createXmlCDATA_a5l4yz_a0a1a2a0e(cdata));

    } else if (c instanceof Text) {
      String text = ((Text) c).getText();
      int index = 0;
      boolean nlSeen = !((prev == null || prev instanceof Element));
      for (; index < text.length(); index++) {
        char ch = text.charAt(index);
        if (ch == '\n') {
          if (!(nlSeen)) {
            nlSeen = true;
            continue;
          }
        }
        if (ch != ' ' && ch != '\t' && ch != '\r') {
          break;
        }
      }
      text = text.substring(index);
      index = text.length();
      for (; index > 0; index--) {
        char ch = text.charAt(index - 1);
        if (ch != ' ' && ch != '\t') {
          break;
        }
      }
      text = text.substring(0, index);
      if (text.isEmpty()) {
        return null;
      }
      if (text.endsWith("\n") && (next == null || next instanceof Element)) {
        text = text.substring(0, text.length() - 1);
      }
      return convertText(Sequence.fromIterable(Sequence.fromArray((" " + text + " ").split("\n"))).select(new ISelector<String, String>() {
        public String select(String it) {
          return ((it == null ? null : it.trim()));
        }
      }).toGenericArray(String.class));
    } else if (c instanceof EntityRef) {
      String name = ((EntityRef) c).getName();
      return Sequence.<SNode>singleton(createXmlEntityRef_a5l4yz_a0a1a4a0e(name));
    }
    return null;
  }
  private static Iterable<SNode> convertText(String[] lines) {
    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());
    for (int i = 0; i < lines.length; i++) {
      String s = lines[i];
      int len = s.length();
      int start = 0;
      for (int e = 0; e < len; e++) {
        char c = s.charAt(e);
        if (c < 0x20 || c == '\'' || c == '"' || c == '<' || c == '>' || c == '&') {
          if (e > start) {
            ListSequence.fromList(result).addElement(createXmlText_a5l4yz_a0a0a0a1a3a1a5(s.substring(start, e)));
          }
          start = e + 1;
          if (c < 0x20) {
            ListSequence.fromList(result).addElement(createXmlCharRef_a5l4yz_a0a0a2a1a3a1a5(toHex4(c)));
          } else {
            String name = "quot";
            switch (c) {
              case '\'':
                name = "apos";
                break;
              case '<':
                name = "lt";
                break;
              case '>':
                name = "gt";
                break;
              case '&':
                name = "amp";
                break;
              default:
            }
            ListSequence.fromList(result).addElement(createXmlEntityRef_a5l4yz_a0a2a0c0b0d0b0f(name));
          }
        }
      }
      if (len > start) {
        ListSequence.fromList(result).addElement(createXmlText_a5l4yz_a0a0a4a1a5(s.substring(start, len)));
      }
      if (!(SNodeOperations.isInstanceOf(ListSequence.fromList(result).last(), CONCEPTS.XmlText$ZE)) && i + 1 < lines.length || len == 0) {
        ListSequence.fromList(result).addElement(createXmlText_a5l4yz_a0a0a5a1a5());
      }
    }
    return result;
  }
  private static Iterable<SNode> convertAttributeText(String s) {
    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());
    int len = s.length();
    int start = 0;
    for (int e = 0; e < len; e++) {
      char c = s.charAt(e);
      if (c < 0x20 || c == '\'' || c == '"' || c == '<' || c == '>' || c == '&') {
        if (e > start) {
          ListSequence.fromList(result).addElement(createXmlTextValue_a5l4yz_a0a0a0a1a3a6(s.substring(start, e)));
        }
        start = e + 1;
        if (c < 0x20) {
          ListSequence.fromList(result).addElement(createXmlCharRefValue_a5l4yz_a0a0a2a1a3a6(toHex4(c)));
        } else {
          String name = "quot";
          switch (c) {
            case '\'':
              name = "apos";
              break;
            case '<':
              name = "lt";
              break;
            case '>':
              name = "gt";
              break;
            case '&':
              name = "amp";
              break;
            default:
          }
          ListSequence.fromList(result).addElement(createXmlEntityRefValue_a5l4yz_a0a2a0c0b0d0g(name));
        }
      }
    }
    if (len > start) {
      ListSequence.fromList(result).addElement(createXmlTextValue_a5l4yz_a0a0a4a6(s.substring(start, len)));
    }
    return result;
  }
  private static String toHex4(char c) {
    String r = Integer.toHexString(c);
    return "0000".substring(r.length()) + r;
  }

  private static SNode convertAttribute(Attribute elem) {
    SNode result = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b8df3L, "jetbrains.mps.core.xml.structure.XmlAttribute"));
    SPropertyOperations.assign(result, PROPS.attrName$j_5Y, elem.getName());
    ListSequence.fromList(SLinkOperations.getChildren(result, LINKS.value$RZKQ)).addSequence(Sequence.fromIterable(convertAttributeText(elem.getValue())));
    return result;
  }

  public static SNode newDocument(String name) {
    SNode file = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54c94c0L, "jetbrains.mps.core.xml.structure.XmlFile"));
    SPropertyOperations.assign(file, PROPS.name$tAp1, name);
    SLinkOperations.setTarget(file, LINKS.document$w2K0, createXmlDocument_a5l4yz_a0a2a11(name));
    return file;
  }
  private static SNode createXmlAttribute_a5l4yz_a0a0a5a3(Iterable<? extends SNode> seq0, Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlAttribute$UQ, null, null).node();
    n1.setProperty(PROPS.attrName$j_5Y, PROPS.attrName$j_5Y.getType().toString(p0));
    for (SNode n : seq0) {
      n1.addChild(LINKS.value$RZKQ, SNodeOperations.copyIfNecessary(SNodeOperations.cast(n, CONCEPTS.XmlValuePart$Ad)));
    }
    return n1;
  }
  private static SNode createXmlCommentLine_a5l4yz_a0a0a0a0c0a0a4(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlCommentLine$tE, null, null).node();
    n1.setProperty(PROPS.text$U6F0, PROPS.text$U6F0.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlProcessingInstruction_a5l4yz_a0a1a1a0e(Object p0, Object p1) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlProcessingInstruction$B0, null, null).node();
    n1.setProperty(PROPS.target$ZWw0, PROPS.target$ZWw0.getType().toString(p0));
    n1.setProperty(PROPS.rawData$ZWwv, PROPS.rawData$ZWwv.getType().toString(p1));
    return n1;
  }
  private static SNode createXmlCDATA_a5l4yz_a0a1a2a0e(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlCDATA$Dr, null, null).node();
    n1.setProperty(PROPS.content$ENhU, PROPS.content$ENhU.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlEntityRef_a5l4yz_a0a1a4a0e(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlEntityRef$k8, null, null).node();
    n1.setProperty(PROPS.entityName$nUu1, PROPS.entityName$nUu1.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlText_a5l4yz_a0a0a0a1a3a1a5(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlText$ZE, null, null).node();
    n1.setProperty(PROPS.value$Wjv0, PROPS.value$Wjv0.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlCharRef_a5l4yz_a0a0a2a1a3a1a5(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlCharRef$xa, null, null).node();
    n1.setProperty(PROPS.charCode$ocV0, PROPS.charCode$ocV0.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlEntityRef_a5l4yz_a0a2a0c0b0d0b0f(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlEntityRef$k8, null, null).node();
    n1.setProperty(PROPS.entityName$nUu1, PROPS.entityName$nUu1.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlText_a5l4yz_a0a0a4a1a5(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlText$ZE, null, null).node();
    n1.setProperty(PROPS.value$Wjv0, PROPS.value$Wjv0.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlText_a5l4yz_a0a0a5a1a5() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlText$ZE, null, null).node();
    n1.setProperty(PROPS.value$Wjv0, "");
    return n1;
  }
  private static SNode createXmlTextValue_a5l4yz_a0a0a0a1a3a6(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlTextValue$BE, null, null).node();
    n1.setProperty(PROPS.text$$xPb, PROPS.text$$xPb.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlCharRefValue_a5l4yz_a0a0a2a1a3a6(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlCharRefValue$_9, null, null).node();
    n1.setProperty(PROPS.charCode$Hh3$, PROPS.charCode$Hh3$.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlEntityRefValue_a5l4yz_a0a2a0c0b0d0g(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlEntityRefValue$MN, null, null).node();
    n1.setProperty(PROPS.entityName$EMB8, PROPS.entityName$EMB8.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlTextValue_a5l4yz_a0a0a4a6(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlTextValue$BE, null, null).node();
    n1.setProperty(PROPS.text$$xPb, PROPS.text$$xPb.getType().toString(p0));
    return n1;
  }
  private static SNode createXmlDocument_a5l4yz_a0a2a11(Object p0) {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = new SNodeBuilder(CONCEPTS.XmlDocument$RD, null, null).node();
    {
      SNode n2 = new SNodeBuilder(CONCEPTS.XmlElement$Pm, null, null).node();
      n2.setProperty(PROPS.tagName$U00C, PROPS.tagName$U00C.getType().toString(p0));
      n1.addChild(LINKS.rootElement$3ntj, n2);
    }
    return n1;
  }

  private static final class PROPS {
    /*package*/ static final SProperty ModuleName$iAUB = MetaAdapterFactory.getProperty(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade18245bL, 0x66c514aade19a4b0L, "ModuleName");
    /*package*/ static final SProperty tagName$U00C = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b10b2L, 0x5c842a42c54b10b6L, "tagName");
    /*package*/ static final SProperty shortEmptyNotation$5AI0 = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b10b2L, 0x61218fae7b61b5d5L, "shortEmptyNotation");
    /*package*/ static final SProperty attrName$j_5Y = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b8df3L, 0x5c842a42c54b8df6L, "attrName");
    /*package*/ static final SProperty name$tAp1 = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty text$U6F0 = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x16838b3fce9bec5eL, 0x16838b3fce9bec5fL, "text");
    /*package*/ static final SProperty target$ZWw0 = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c5494875L, 0x5c842a42c5494876L, "target");
    /*package*/ static final SProperty rawData$ZWwv = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c5494875L, 0x5c842a42c5494877L, "rawData");
    /*package*/ static final SProperty content$ENhU = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c549487aL, 0x16838b3fce9b2633L, "content");
    /*package*/ static final SProperty entityName$nUu1 = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x16838b3fce9c6f4dL, 0x16838b3fce9c6f8fL, "entityName");
    /*package*/ static final SProperty value$Wjv0 = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x16838b3fce9aa513L, 0x16838b3fce9aaa68L, "value");
    /*package*/ static final SProperty charCode$ocV0 = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x2abf08504ffe9886L, 0x2abf08504ffe9887L, "charCode");
    /*package*/ static final SProperty text$$xPb = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, 0x5c842a42c54cfd20L, "text");
    /*package*/ static final SProperty charCode$Hh3$ = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x2abf08504ffed7feL, 0x2abf08504ffed806L, "charCode");
    /*package*/ static final SProperty entityName$EMB8 = MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd21L, 0x5c842a42c54d0258L, "entityName");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink SetOfUnits$fqCa = MetaAdapterFactory.getContainmentLink(0x7a6b8f83d2024e59L, 0x94ecf562edfca98dL, 0x66c514aade18245bL, 0x66c514aade1936a2L, "SetOfUnits");
    /*package*/ static final SContainmentLink attributes$U009 = MetaAdapterFactory.getContainmentLink(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b10b2L, 0x5c842a42c54b10b5L, "attributes");
    /*package*/ static final SContainmentLink content$$sMt = MetaAdapterFactory.getContainmentLink(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b10b2L, 0x16838b3fce9a4922L, "content");
    /*package*/ static final SContainmentLink lines$Yj0Q = MetaAdapterFactory.getContainmentLink(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c5494878L, 0x16838b3fce9bec77L, "lines");
    /*package*/ static final SContainmentLink value$RZKQ = MetaAdapterFactory.getContainmentLink(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b8df3L, 0x5c842a42c54cfd1eL, "value");
    /*package*/ static final SContainmentLink document$w2K0 = MetaAdapterFactory.getContainmentLink(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54c94c0L, 0x5c842a42c54c94c1L, "document");
    /*package*/ static final SContainmentLink rootElement$3ntj = MetaAdapterFactory.getContainmentLink(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5e2f66f285946ac9L, 0x5c842a42c549486fL, "rootElement");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept XmlText$ZE = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x16838b3fce9aa513L, "jetbrains.mps.core.xml.structure.XmlText");
    /*package*/ static final SConcept XmlAttribute$UQ = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b8df3L, "jetbrains.mps.core.xml.structure.XmlAttribute");
    /*package*/ static final SConcept XmlValuePart$Ad = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1cL, "jetbrains.mps.core.xml.structure.XmlValuePart");
    /*package*/ static final SConcept XmlCommentLine$tE = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x16838b3fce9bec5eL, "jetbrains.mps.core.xml.structure.XmlCommentLine");
    /*package*/ static final SConcept XmlProcessingInstruction$B0 = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c5494875L, "jetbrains.mps.core.xml.structure.XmlProcessingInstruction");
    /*package*/ static final SConcept XmlCDATA$Dr = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c549487aL, "jetbrains.mps.core.xml.structure.XmlCDATA");
    /*package*/ static final SConcept XmlEntityRef$k8 = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x16838b3fce9c6f4dL, "jetbrains.mps.core.xml.structure.XmlEntityRef");
    /*package*/ static final SConcept XmlCharRef$xa = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x2abf08504ffe9886L, "jetbrains.mps.core.xml.structure.XmlCharRef");
    /*package*/ static final SConcept XmlTextValue$BE = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd1fL, "jetbrains.mps.core.xml.structure.XmlTextValue");
    /*package*/ static final SConcept XmlCharRefValue$_9 = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x2abf08504ffed7feL, "jetbrains.mps.core.xml.structure.XmlCharRefValue");
    /*package*/ static final SConcept XmlEntityRefValue$MN = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54cfd21L, "jetbrains.mps.core.xml.structure.XmlEntityRefValue");
    /*package*/ static final SConcept XmlDocument$RD = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5e2f66f285946ac9L, "jetbrains.mps.core.xml.structure.XmlDocument");
    /*package*/ static final SConcept XmlElement$Pm = MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b10b2L, "jetbrains.mps.core.xml.structure.XmlElement");
  }
}
